{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport MOMENT from \"moment\";\nimport { Http } from \"../../../src/Services/API/Http\";\n\nvar EntityUpdate = function EntityUpdate(_ref) {\n  var lastUpdatedAt = _ref.lastUpdatedAt,\n      entityType = _ref.entityType,\n      entityId = _ref.entityId;\n  useEffect(function () {\n    /* tslint:disable-next-line */\n    $(function () {\n      /* tslint:disable-next-line */\n      $('[data-toggle=\"tooltip\"]').tooltip();\n    });\n  });\n  var entityUpdateAllowed = MOMENT().diff(MOMENT(lastUpdatedAt), 'days') > 7;\n\n  var handleClick = function handleClick() {\n    return _regeneratorRuntime.async(function handleClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Http.Request('POST', \"https://kitaablu.com/api/v1/entity/\".concat(entityType, \"/update/\").concat(entityId)));\n\n          case 3:\n            _context.next = 7;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  return __jsx(\"div\", {\n    className: \"mt-3 ml-1\"\n  }, __jsx(\"button\", {\n    onClick: handleClick,\n    disabled: !entityUpdateAllowed,\n    \"data-toggle\": \"tooltip\",\n    \"data-placement\": \"right\",\n    title: entityUpdateAllowed ? \"Click here to raise an updation request\" : \"Information is already upto date, cannot raise request\",\n    type: \"button\",\n    className: \"btn btn-secondary btn-sm btn-block\"\n  }, \"Request Data Updation\"), __jsx(\"div\", {\n    className: \"mt-2\"\n  }, \"Info last updated on \"), __jsx(\"div\", null, MOMENT(lastUpdatedAt).format(\"MMMM Do, YYYY\")), __jsx(\"div\", {\n    className: \"alert alert-primary fade show\",\n    role: \"alert\",\n    \"data-dismiss\": \"alert\"\n  }, \"This is a primary alert\\u2014check it out!\"));\n};\n\nexport { EntityUpdate };","map":{"version":3,"sources":["/Users/pushkargoel/Myapps/next-boilerplate/src/Components/EntityUpdate/index.tsx"],"names":["React","useEffect","MOMENT","Http","EntityUpdate","lastUpdatedAt","entityType","entityId","$","tooltip","entityUpdateAllowed","diff","handleClick","Request","format"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAGA,SAASC,IAAT;;AAEA,IAAMC,YAAwD,GAAG,SAA3DA,YAA2D,OAI9C;AAAA,MAHfC,aAGe,QAHfA,aAGe;AAAA,MAFfC,UAEe,QAFfA,UAEe;AAAA,MADfC,QACe,QADfA,QACe;AAEfN,EAAAA,SAAS,CAAC,YAAM;AAAE;AACdO,IAAAA,CAAC,CAAC,YAAY;AAAE;AACXA,MAAAA,CAAC,CAAC,yBAAD,CAAF,CAAsCC,OAAtC;AACH,KAFA,CAAD;AAGH,GAJQ,CAAT;AAMA,MAAMC,mBAAmB,GAAGR,MAAM,GAAGS,IAAT,CAAcT,MAAM,CAACG,aAAD,CAApB,EAAqC,MAArC,IAA+C,CAA3E;;AACA,MAAMO,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAENT,IAAI,CAACU,OAAL,CAAa,MAAb,+CAA2DP,UAA3D,qBAAgFC,QAAhF,EAFM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAQA,SAAO;AAAK,IAAA,SAAS,EAAC;AAAf,KACH;AACI,IAAA,OAAO,EAAEK,WADb;AAEI,IAAA,QAAQ,EAAE,CAACF,mBAFf;AAGI,mBAAY,SAHhB;AAII,sBAAe,OAJnB;AAKI,IAAA,KAAK,EACDA,mBAAmB,GACnB,yCADmB,GAEnB,wDARR;AAUI,IAAA,IAAI,EAAC,QAVT;AAWI,IAAA,SAAS,EAAC;AAXd,6BADG,EAeH;AAAK,IAAA,SAAS,EAAC;AAAf,6BAfG,EAgBH,mBAAMR,MAAM,CAACG,aAAD,CAAN,CAAsBS,MAAtB,CAA6B,eAA7B,CAAN,CAhBG,EAiBH;AAAK,IAAA,SAAS,EAAC,+BAAf;AAA+C,IAAA,IAAI,EAAC,OAApD;AAA4D,oBAAa;AAAzE,kDAjBG,CAAP;AAqBH,CA1CD;;AA4CA,SAASV,YAAT","sourcesContent":["import React, { useEffect } from \"react\";\nimport MOMENT from \"moment\";\n\nimport { EntityUpdateProps } from \"./EntityUpdate\";\nimport { Http } from '../../../src/Services/API/Http';\n\nconst EntityUpdate: React.FunctionComponent<EntityUpdateProps> = ({\n    lastUpdatedAt,\n    entityType,\n    entityId\n}): JSX.Element => {\n\n    useEffect(() => { /* tslint:disable-next-line */\n        $(function () { /* tslint:disable-next-line */\n            ($('[data-toggle=\"tooltip\"]') as any).tooltip()\n        });\n    });\n\n    const entityUpdateAllowed = MOMENT().diff(MOMENT(lastUpdatedAt), 'days') > 7;\n    const handleClick = async () => {\n        try {\n            await Http.Request('POST', `https://kitaablu.com/api/v1/entity/${entityType}/update/${entityId}`);\n        } catch (error) {\n            \n        }\n    };\n\n    return <div className=\"mt-3 ml-1\">\n        <button \n            onClick={handleClick}\n            disabled={!entityUpdateAllowed}\n            data-toggle=\"tooltip\" \n            data-placement=\"right\" \n            title = {\n                entityUpdateAllowed ? \n                \"Click here to raise an updation request\" : \n                \"Information is already upto date, cannot raise request\"\n            }\n            type=\"button\" \n            className=\"btn btn-secondary btn-sm btn-block\">\n            Request Data Updation\n        </button>\n        <div className=\"mt-2\">Info last updated on </div>\n        <div>{MOMENT(lastUpdatedAt).format(\"MMMM Do, YYYY\")}</div>\n        <div className=\"alert alert-primary fade show\" role=\"alert\" data-dismiss=\"alert\">\n        This is a primary alertâ€”check it out!\n        </div>\n    </div>;\n};\n\nexport { EntityUpdate };\n"]},"metadata":{},"sourceType":"module"}