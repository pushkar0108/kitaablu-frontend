{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport { useRouter } from 'next/router';\nimport { Http } from \"../../Services/API/Http\";\nvar SEARCH_URI = 'https://kitaablu.com/api/v1/search/';\n\nvar CustomAsyncTypeahead = function CustomAsyncTypeahead() {\n  var router = useRouter();\n\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState([]),\n      options = _useState2[0],\n      setOptions = _useState2[1];\n\n  var handleSearch = function handleSearch(query) {\n    var _options;\n\n    return _regeneratorRuntime.async(function handleSearch$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Http.Request('GET', \"\".concat(SEARCH_URI + query), {}));\n\n          case 4:\n            _options = _context.sent;\n            setOptions(_options);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(\"Error while fetching props: \", _context.t0);\n\n          case 11:\n            setIsLoading(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  var changeRoute = function changeRoute(options) {\n    if (options && options[0]) {\n      router.push(\"/company/\".concat(options[0].CIN));\n    }\n  };\n\n  return __jsx(AsyncTypeahead, {\n    id: \"async-example\",\n    isLoading: isLoading,\n    labelKey: function labelKey(option) {\n      return \"\".concat(option.name, \" | \").concat(option.CIN);\n    },\n    minLength: 3,\n    onSearch: handleSearch,\n    options: options,\n    placeholder: \"Search using company name ...\",\n    renderMenuItemChildren: function renderMenuItemChildren(option, props) {\n      return __jsx(\"div\", null, option.name);\n    },\n    onChange: changeRoute\n  });\n};\n\nexport { CustomAsyncTypeahead as AsyncTypeahead };","map":{"version":3,"sources":["/Users/pushkargoel/Myapps/next-boilerplate/src/Components/AsyncTypeahead/index.tsx"],"names":["React","useState","AsyncTypeahead","useRouter","Http","SEARCH_URI","CustomAsyncTypeahead","router","isLoading","setIsLoading","options","setOptions","handleSearch","query","Request","console","log","changeRoute","push","CIN","option","name","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAGA,SAASC,IAAT;AAEA,IAAMC,UAAU,GAAG,qCAAnB;;AACA,IAAMC,oBAAqE,GAAG,SAAxEA,oBAAwE,GAAmB;AAC7F,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;;AAD6F,kBAE3DF,QAAQ,CAAC,KAAD,CAFmD;AAAA,MAEtFO,SAFsF;AAAA,MAE3EC,YAF2E;;AAAA,mBAG/DR,QAAQ,CAAC,EAAD,CAHuD;AAAA,MAGtFS,OAHsF;AAAA,MAG7EC,UAH6E;;AAK7F,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAOC,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjBJ,YAAAA,YAAY,CAAC,IAAD,CAAZ;AADiB;AAAA;AAAA,6CAIcL,IAAI,CAACU,OAAL,CACvB,KADuB,YAEpBT,UAAU,GAAGQ,KAFO,GAGvB,EAHuB,CAJd;;AAAA;AAIPH,YAAAA,QAJO;AAUbC,YAAAA,UAAU,CAACD,QAAD,CAAV;AAVa;AAAA;;AAAA;AAAA;AAAA;AAYbK,YAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;;AAZa;AAejBP,YAAAA,YAAY,CAAC,KAAD,CAAZ;;AAfiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAkBA,MAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACP,OAAD,EAAa;AAC7B,QAAGA,OAAO,IAAIA,OAAO,CAAC,CAAD,CAArB,EAA0B;AACtBH,MAAAA,MAAM,CAACW,IAAP,oBAAwBR,OAAO,CAAC,CAAD,CAAP,CAAWS,GAAnC;AACH;AACJ,GAJD;;AAMA,SACI,MAAC,cAAD;AACI,IAAA,EAAE,EAAC,eADP;AAEI,IAAA,SAAS,EAAEX,SAFf;AAGI,IAAA,QAAQ,EAAE,kBAAAY,MAAM;AAAA,uBAAOA,MAAM,CAACC,IAAd,gBAAwBD,MAAM,CAACD,GAA/B;AAAA,KAHpB;AAII,IAAA,SAAS,EAAE,CAJf;AAKI,IAAA,QAAQ,EAAEP,YALd;AAMI,IAAA,OAAO,EAAEF,OANb;AAOI,IAAA,WAAW,EAAC,+BAPhB;AAQI,IAAA,sBAAsB,EAAE,gCAACU,MAAD,EAASE,KAAT;AAAA,aACpB,mBACKF,MAAM,CAACC,IADZ,CADoB;AAAA,KAR5B;AAaI,IAAA,QAAQ,EAAEJ;AAbd,IADJ;AAiBH,CA9CD;;AAgDA,SAASX,oBAAoB,IAAIJ,cAAjC","sourcesContent":["import React, { useState } from \"react\";\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nimport { IAsyncTypeahead } from \"./AsyncTypeahead\";\nimport { Http } from '../../Services/API/Http';\n\nconst SEARCH_URI = 'https://kitaablu.com/api/v1/search/';\nconst CustomAsyncTypeahead: React.FunctionComponent<IAsyncTypeahead.IProps> = (): JSX.Element => {\n    const router = useRouter();\n    const [isLoading, setIsLoading] = useState(false);\n    const [options, setOptions] = useState([]);\n\n    const handleSearch = async (query) => {\n        setIsLoading(true);\n\n        try {\n            const options: any = await Http.Request(\n                'GET',\n                `${SEARCH_URI + query}`,\n                {}\n            );\n\n            setOptions(options);\n        } catch (error) {\n            console.log(\"Error while fetching props: \", error);\n        }\n\n        setIsLoading(false);\n    };\n\n    const changeRoute = (options) => {\n        if(options && options[0]) {\n            router.push(`/company/${options[0].CIN}`);\n        }\n    };\n\n    return (\n        <AsyncTypeahead\n            id=\"async-example\"\n            isLoading={isLoading}\n            labelKey={option => `${option.name} | ${option.CIN}`}\n            minLength={3}\n            onSearch={handleSearch}\n            options={options}\n            placeholder=\"Search using company name ...\"\n            renderMenuItemChildren={(option, props) => (\n                <div>\n                    {option.name}\n                </div>\n            )}\n            onChange={changeRoute}\n        />\n    );\n};\n\nexport { CustomAsyncTypeahead as AsyncTypeahead };\n"]},"metadata":{},"sourceType":"module"}