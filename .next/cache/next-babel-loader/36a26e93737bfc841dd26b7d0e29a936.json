{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// #region Local Imports\nimport { ActionConsts } from \"../../../Definitions\"; // #endregion Local Imports\n// #region Interface Imports\n\n// #endregion Interface Imports\nconst INITIAL_STATE = {\n  home: {\n    version: 1\n  },\n  image: {\n    url: \"\"\n  }\n};\nexport const HomeReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ActionConsts.Home.SetReducer:\n      return _objectSpread({}, state, {}, action.payload);\n\n    case ActionConsts.Home.ResetReducer:\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};","map":null,"metadata":{},"sourceType":"module"}