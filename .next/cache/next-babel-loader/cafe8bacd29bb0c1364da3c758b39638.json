{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport MOMENT from \"moment\";\n\nconst EntityUpdate = ({\n  lastUpdatedAt\n}) => {\n  useEffect(() => {\n    /* tslint:disable-next-line */\n    $(function () {\n      /* tslint:disable-next-line */\n      $('[data-toggle=\"tooltip\"]').tooltip();\n    });\n  });\n  const entityUpdateAllowed = MOMENT().diff(MOMENT(lastUpdatedAt), 'days') > 7;\n  return __jsx(\"div\", {\n    className: \"mt-3 ml-1\"\n  }, __jsx(\"button\", {\n    disabled: !entityUpdateAllowed,\n    \"data-toggle\": \"tooltip\",\n    \"data-placement\": \"right\",\n    title: entityUpdateAllowed ? \"Click here to raise an updation request\" : \"Information is already upto date, cannot raise request\",\n    type: \"button\",\n    className: \"btn btn-secondary btn-sm btn-block\"\n  }, \"Request Data Updation\"), __jsx(\"div\", {\n    className: \"mt-2\"\n  }, \"Info last updated on \"), __jsx(\"div\", null, MOMENT(lastUpdatedAt).format(\"MMMM Do, YYYY\")));\n};\n\nexport { EntityUpdate };","map":{"version":3,"sources":["/Users/pushkargoel/Myapps/next-boilerplate/src/Components/EntityUpdate/index.tsx"],"names":["React","useEffect","MOMENT","EntityUpdate","lastUpdatedAt","$","tooltip","entityUpdateAllowed","diff","format"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAQA,MAAMC,YAAwD,GAAG,CAAC;AAC9DC,EAAAA;AAD8D,CAAD,KAE9C;AAEfH,EAAAA,SAAS,CAAC,MAAM;AAAE;AACdI,IAAAA,CAAC,CAAC,YAAY;AAAE;AACXA,MAAAA,CAAC,CAAC,yBAAD,CAAF,CAAsCC,OAAtC;AACH,KAFA,CAAD;AAGH,GAJQ,CAAT;AAMA,QAAMC,mBAAmB,GAAGL,MAAM,GAAGM,IAAT,CAAcN,MAAM,CAACE,aAAD,CAApB,EAAqC,MAArC,IAA+C,CAA3E;AAEA,SAAO;AAAK,IAAA,SAAS,EAAC;AAAf,KACH;AACI,IAAA,QAAQ,EAAE,CAACG,mBADf;AAEI,mBAAY,SAFhB;AAGI,sBAAe,OAHnB;AAII,IAAA,KAAK,EACDA,mBAAmB,GACnB,yCADmB,GAEnB,wDAPR;AASI,IAAA,IAAI,EAAC,QATT;AAUI,IAAA,SAAS,EAAC;AAVd,6BADG,EAcH;AAAK,IAAA,SAAS,EAAC;AAAf,6BAdG,EAeH,mBAAML,MAAM,CAACE,aAAD,CAAN,CAAsBK,MAAtB,CAA6B,eAA7B,CAAN,CAfG,CAAP;AAiBH,CA7BD;;AA+BA,SAASN,YAAT","sourcesContent":["import React, { useEffect } from \"react\";\nimport MOMENT from \"moment\";\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nimport { AsyncTypeahead } from \"@Components\";\nimport { initGA, logPageView } from '@Services/analytics';\nimport { EntityUpdateProps } from \"./EntityUpdate\";\n\nconst EntityUpdate: React.FunctionComponent<EntityUpdateProps> = ({\n    lastUpdatedAt\n}): JSX.Element => {\n\n    useEffect(() => { /* tslint:disable-next-line */\n        $(function () { /* tslint:disable-next-line */\n            ($('[data-toggle=\"tooltip\"]') as any).tooltip()\n        });\n    });\n\n    const entityUpdateAllowed = MOMENT().diff(MOMENT(lastUpdatedAt), 'days') > 7;\n\n    return <div className=\"mt-3 ml-1\">\n        <button \n            disabled={!entityUpdateAllowed}\n            data-toggle=\"tooltip\" \n            data-placement=\"right\" \n            title = {\n                entityUpdateAllowed ? \n                \"Click here to raise an updation request\" : \n                \"Information is already upto date, cannot raise request\"\n            }\n            type=\"button\" \n            className=\"btn btn-secondary btn-sm btn-block\">\n            Request Data Updation\n        </button>\n        <div className=\"mt-2\">Info last updated on </div>\n        <div>{MOMENT(lastUpdatedAt).format(\"MMMM Do, YYYY\")}</div>\n    </div>;\n};\n\nexport { EntityUpdate };\n"]},"metadata":{},"sourceType":"module"}