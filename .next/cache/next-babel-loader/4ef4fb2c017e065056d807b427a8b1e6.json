{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport MOMENT from \"moment\";\nimport { Http } from \"../../../src/Services/API/Http\";\n\nvar EntityUpdate = function EntityUpdate(_ref) {\n  var lastUpdatedAt = _ref.lastUpdatedAt,\n      entityType = _ref.entityType,\n      entityId = _ref.entityId;\n\n  var _useState = useState(false),\n      showAlert = _useState[0],\n      updateShowAlert = _useState[1];\n\n  useEffect(function () {\n    /* tslint:disable-next-line */\n    $(function () {\n      /* tslint:disable-next-line */\n      $('[data-toggle=\"tooltip\"]').tooltip();\n    });\n    $('[data-toggle=\"tooltip\"]').tooltip({\n      trigger: 'hover'\n    });\n  });\n  var entityUpdateAllowed = MOMENT().diff(MOMENT(lastUpdatedAt), 'days') > 7;\n\n  var handleClick = function handleClick() {\n    return _regeneratorRuntime.async(function handleClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Http.Request('POST', \"https://kitaablu.com/api/v1/entity/\".concat(entityType, \"/update/\").concat(entityId)));\n\n          case 3:\n            updateShowAlert(true);\n            setTimeout(function () {\n              updateShowAlert(false);\n            }, 2000);\n            _context.next = 9;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return __jsx(\"div\", {\n    className: \"mt-3 ml-1\"\n  }, __jsx(\"button\", {\n    onClick: handleClick,\n    disabled: !entityUpdateAllowed,\n    \"data-toggle\": \"tooltip\",\n    \"data-placement\": \"right\",\n    title: entityUpdateAllowed ? \"Click here to raise an updation request\" : \"Information is already upto date, cannot raise request\",\n    type: \"button\",\n    className: \"btn btn-secondary btn-sm btn-block\"\n  }, \"Request Data Updation\"), __jsx(\"div\", {\n    className: \"mt-2\"\n  }, \"Info last updated on \"), __jsx(\"div\", null, MOMENT(lastUpdatedAt).format(\"MMMM Do, YYYY\")), showAlert && __jsx(\"div\", {\n    className: \"alert alert-warning alert-dismissible fade show\",\n    role: \"alert\"\n  }, __jsx(\"strong\", null, \"Success!\"), \" Request Raised.\", __jsx(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"alert\",\n    \"aria-label\": \"Close\"\n  }, __jsx(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\"))));\n};\n\nexport { EntityUpdate };","map":{"version":3,"sources":["/Users/pushkargoel/Myapps/next-boilerplate/src/Components/EntityUpdate/index.tsx"],"names":["React","useEffect","useState","MOMENT","Http","EntityUpdate","lastUpdatedAt","entityType","entityId","showAlert","updateShowAlert","$","tooltip","trigger","entityUpdateAllowed","diff","handleClick","Request","setTimeout","format"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAGA,SAASC,IAAT;;AAEA,IAAMC,YAAwD,GAAG,SAA3DA,YAA2D,OAI9C;AAAA,MAHfC,aAGe,QAHfA,aAGe;AAAA,MAFfC,UAEe,QAFfA,UAEe;AAAA,MADfC,QACe,QADfA,QACe;;AAAA,kBACsBN,QAAQ,CAAC,KAAD,CAD9B;AAAA,MACRO,SADQ;AAAA,MACGC,eADH;;AAGfT,EAAAA,SAAS,CAAC,YAAM;AAAE;AACdU,IAAAA,CAAC,CAAC,YAAY;AAAE;AACXA,MAAAA,CAAC,CAAC,yBAAD,CAAF,CAAsCC,OAAtC;AACH,KAFA,CAAD;AAICD,IAAAA,CAAC,CAAC,yBAAD,CAAF,CAAsCC,OAAtC,CAA8C;AAC1CC,MAAAA,OAAO,EAAG;AADgC,KAA9C;AAGH,GARQ,CAAT;AAUA,MAAMC,mBAAmB,GAAGX,MAAM,GAAGY,IAAT,CAAcZ,MAAM,CAACG,aAAD,CAApB,EAAqC,MAArC,IAA+C,CAA3E;;AACA,MAAMU,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAENZ,IAAI,CAACa,OAAL,CAAa,MAAb,+CAA2DV,UAA3D,qBAAgFC,QAAhF,EAFM;;AAAA;AAGZE,YAAAA,eAAe,CAAC,IAAD,CAAf;AACAQ,YAAAA,UAAU,CAAC,YAAM;AACbR,cAAAA,eAAe,CAAC,KAAD,CAAf;AACH,aAFS,EAEP,IAFO,CAAV;AAJY;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAYA,SAAO;AAAK,IAAA,SAAS,EAAC;AAAf,KACH;AACI,IAAA,OAAO,EAAEM,WADb;AAEI,IAAA,QAAQ,EAAE,CAACF,mBAFf;AAGI,mBAAY,SAHhB;AAII,sBAAe,OAJnB;AAKI,IAAA,KAAK,EACDA,mBAAmB,GACnB,yCADmB,GAEnB,wDARR;AAUI,IAAA,IAAI,EAAC,QAVT;AAWI,IAAA,SAAS,EAAC;AAXd,6BADG,EAeH;AAAK,IAAA,SAAS,EAAC;AAAf,6BAfG,EAgBH,mBAAMX,MAAM,CAACG,aAAD,CAAN,CAAsBa,MAAtB,CAA6B,eAA7B,CAAN,CAhBG,EAmBCV,SAAS,IACL;AAAK,IAAA,SAAS,EAAC,iDAAf;AAAiE,IAAA,IAAI,EAAC;AAAtE,KACI,iCADJ,sBAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,OAAhC;AAAwC,oBAAa,OAArD;AAA6D,kBAAW;AAAxE,KACI;AAAM,mBAAY;AAAlB,YADJ,CAFJ,CApBL,CAAP;AA8BH,CA5DD;;AA8DA,SAASJ,YAAT","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport MOMENT from \"moment\";\n\nimport { EntityUpdateProps } from \"./EntityUpdate\";\nimport { Http } from '../../../src/Services/API/Http';\n\nconst EntityUpdate: React.FunctionComponent<EntityUpdateProps> = ({\n    lastUpdatedAt,\n    entityType,\n    entityId\n}): JSX.Element => {\n    const [showAlert, updateShowAlert] = useState(false);\n\n    useEffect(() => { /* tslint:disable-next-line */\n        $(function () { /* tslint:disable-next-line */\n            ($('[data-toggle=\"tooltip\"]') as any).tooltip()\n        });\n\n        ($('[data-toggle=\"tooltip\"]') as any).tooltip({\n            trigger : 'hover'\n        });\n    });\n\n    const entityUpdateAllowed = MOMENT().diff(MOMENT(lastUpdatedAt), 'days') > 7;\n    const handleClick = async () => {\n        try {\n            await Http.Request('POST', `https://kitaablu.com/api/v1/entity/${entityType}/update/${entityId}`);\n            updateShowAlert(true);\n            setTimeout(() => {\n                updateShowAlert(false);\n            }, 2000);\n        } catch (error) {\n            \n        }\n    };\n\n    return <div className=\"mt-3 ml-1\">\n        <button \n            onClick={handleClick}\n            disabled={!entityUpdateAllowed}\n            data-toggle=\"tooltip\" \n            data-placement=\"right\" \n            title = {\n                entityUpdateAllowed ? \n                \"Click here to raise an updation request\" : \n                \"Information is already upto date, cannot raise request\"\n            }\n            type=\"button\" \n            className=\"btn btn-secondary btn-sm btn-block\">\n            Request Data Updation\n        </button>\n        <div className=\"mt-2\">Info last updated on </div>\n        <div>{MOMENT(lastUpdatedAt).format(\"MMMM Do, YYYY\")}</div>\n\n        {\n            showAlert && (\n                <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n                    <strong>Success!</strong> Request Raised.\n                    <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n            )\n        }\n        \n    </div>;\n};\n\nexport { EntityUpdate };\n"]},"metadata":{},"sourceType":"module"}