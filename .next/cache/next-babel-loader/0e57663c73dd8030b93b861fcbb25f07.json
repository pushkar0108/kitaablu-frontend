{"ast":null,"code":"var __jsx = React.createElement;\n// #region Global Imports\nimport * as React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n// #endregion Global Imports\n// #region Local Imports\nimport { withTranslation } from \"../../server/i18n\";\nimport { Container, Top, TopText, Middle, MiddleLeft, MiddleLeftButtons, MiddleRight, Apod, ApodButton } from \"../../src/Styled/Home\";\nimport { HomeActions } from \"../../src/Actions\";\nimport { Heading, LocaleButton } from \"../../src/Components\"; // #endregion Local Imports\n// #region Interface Imports\n\n// #endregion Interface Imports\nvar Home = function Home(_ref) {\n  var t = _ref.t,\n      i18n = _ref.i18n;\n  var home = useSelector(function (state) {\n    return state.home;\n  });\n  var dispatch = useDispatch();\n\n  var renderLocaleButtons = function renderLocaleButtons(activeLanguage) {\n    return [\"en\", \"es\", \"tr\"].map(function (lang) {\n      return __jsx(LocaleButton, {\n        key: lang,\n        lang: lang,\n        isActive: activeLanguage === lang,\n        onClick: function onClick() {\n          return i18n.changeLanguage(lang);\n        }\n      });\n    });\n  };\n\n  return __jsx(Container, null, __jsx(Top, null, __jsx(\"img\", {\n    src: \"/images/pankod-logo.png\",\n    alt: \"Pankod Logo\"\n  })), __jsx(Middle, null, __jsx(MiddleLeft, null, __jsx(MiddleLeftButtons, null, renderLocaleButtons(i18n.language))), __jsx(MiddleRight, null, __jsx(TopText, null, t(\"common:Hello\")), __jsx(Heading, {\n    text: t(\"common:World\")\n  }), __jsx(Apod, null, __jsx(ApodButton, {\n    onClick: function onClick() {\n      dispatch(HomeActions.GetApod({\n        params: {\n          hd: false\n        }\n      }));\n    }\n  }, \"Discover pushkar's Space\"), __jsx(\"img\", {\n    src: home.image.url,\n    height: \"300\",\n    width: \"150\",\n    alt: \"Discover Space\"\n  })))));\n}; // Home.getInitialProps = async (\n//     ctx: ReduxNextPageContext\n// ): Promise<IHomePage.InitialProps> => {\n//     await ctx.store.dispatch(\n//         HomeActions.GetApod({\n//             params: { hd: true },\n//         })\n//     );\n//     return { namespacesRequired: [\"common\"] };\n// };\n\n\nvar Extended = withTranslation(\"common\")(Home);\nexport var __N_SSP = true;\nexport default Extended;","map":{"version":3,"sources":["/Users/pushkargoel/Myapps/next-boilerplate/pages/pushkar/index.tsx"],"names":["React","useSelector","useDispatch","withTranslation","Container","Top","TopText","Middle","MiddleLeft","MiddleLeftButtons","MiddleRight","Apod","ApodButton","HomeActions","Heading","LocaleButton","Home","t","i18n","home","state","dispatch","renderLocaleButtons","activeLanguage","map","lang","changeLanguage","language","GetApod","params","hd","image","url","Extended"],"mappings":";AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA;AAEA;AACA,SAASC,eAAT;AACA,SACIC,SADJ,EAEIC,GAFJ,EAGIC,OAHJ,EAIIC,MAJJ,EAKIC,UALJ,EAMIC,iBANJ,EAOIC,WAPJ,EAQIC,IARJ,EASIC,UATJ;AAYA,SAASC,WAAT;AACA,SAASC,OAAT,EAAkBC,YAAlB,+B,CACA;AAEA;;AAEA;AAEA,IAAMC,IAAwD,GAAG,SAA3DA,IAA2D,OAG3D;AAAA,MAFFC,CAEE,QAFFA,CAEE;AAAA,MADFC,IACE,QADFA,IACE;AACF,MAAMC,IAAI,GAAGlB,WAAW,CAAC,UAACmB,KAAD;AAAA,WAAmBA,KAAK,CAACD,IAAzB;AAAA,GAAD,CAAxB;AACA,MAAME,QAAQ,GAAGnB,WAAW,EAA5B;;AAEA,MAAMoB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,cAAD;AAAA,WACxB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmBC,GAAnB,CAAuB,UAAAC,IAAI;AAAA,aACvB,MAAC,YAAD;AACI,QAAA,GAAG,EAAEA,IADT;AAEI,QAAA,IAAI,EAAEA,IAFV;AAGI,QAAA,QAAQ,EAAEF,cAAc,KAAKE,IAHjC;AAII,QAAA,OAAO,EAAE;AAAA,iBAAMP,IAAI,CAACQ,cAAL,CAAoBD,IAApB,CAAN;AAAA;AAJb,QADuB;AAAA,KAA3B,CADwB;AAAA,GAA5B;;AAUA,SACI,MAAC,SAAD,QACI,MAAC,GAAD,QACI;AAAK,IAAA,GAAG,EAAC,yBAAT;AAAmC,IAAA,GAAG,EAAC;AAAvC,IADJ,CADJ,EAII,MAAC,MAAD,QACI,MAAC,UAAD,QACI,MAAC,iBAAD,QACKH,mBAAmB,CAACJ,IAAI,CAACS,QAAN,CADxB,CADJ,CADJ,EAMI,MAAC,WAAD,QACI,MAAC,OAAD,QAAUV,CAAC,CAAC,cAAD,CAAX,CADJ,EAEI,MAAC,OAAD;AAAS,IAAA,IAAI,EAAEA,CAAC,CAAC,cAAD;AAAhB,IAFJ,EAGI,MAAC,IAAD,QACI,MAAC,UAAD;AACI,IAAA,OAAO,EAAE,mBAAM;AACXI,MAAAA,QAAQ,CACJR,WAAW,CAACe,OAAZ,CAAoB;AAChBC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,EAAE,EAAE;AAAN;AADQ,OAApB,CADI,CAAR;AAKH;AAPL,gCADJ,EAYI;AACI,IAAA,GAAG,EAAEX,IAAI,CAACY,KAAL,CAAWC,GADpB;AAEI,IAAA,MAAM,EAAC,KAFX;AAGI,IAAA,KAAK,EAAC,KAHV;AAII,IAAA,GAAG,EAAC;AAJR,IAZJ,CAHJ,CANJ,CAJJ,CADJ;AAqCH,CAtDD,C,CAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMC,QAAQ,GAAG9B,eAAe,CAAC,QAAD,CAAf,CAA0Ba,IAA1B,CAAjB;;AAqBA,eAAeiB,QAAf","sourcesContent":["// #region Global Imports\nimport * as React from \"react\";\nimport { NextPage, GetServerSideProps } from \"next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Http } from '../../src/Services/API/Http';\n// #endregion Global Imports\n\n// #region Local Imports\nimport { withTranslation } from \"@Server/i18n\";\nimport {\n    Container,\n    Top,\n    TopText,\n    Middle,\n    MiddleLeft,\n    MiddleLeftButtons,\n    MiddleRight,\n    Apod,\n    ApodButton,\n} from \"@Styled/Home\";\nimport { IStore } from \"@Redux/IStore\";\nimport { HomeActions } from \"@Actions\";\nimport { Heading, LocaleButton } from \"@Components\";\n// #endregion Local Imports\n\n// #region Interface Imports\nimport { IHomePage, ReduxNextPageContext } from \"@Interfaces\";\n// #endregion Interface Imports\n\nconst Home: NextPage<IHomePage.IProps, IHomePage.InitialProps> = ({\n    t,\n    i18n,\n}) => {\n    const home = useSelector((state: IStore) => state.home);\n    const dispatch = useDispatch();\n\n    const renderLocaleButtons = (activeLanguage: string) =>\n        [\"en\", \"es\", \"tr\"].map(lang => (\n            <LocaleButton\n                key={lang}\n                lang={lang}\n                isActive={activeLanguage === lang}\n                onClick={() => i18n.changeLanguage(lang)}\n            />\n        ));\n\n    return (\n        <Container>\n            <Top>\n                <img src=\"/images/pankod-logo.png\" alt=\"Pankod Logo\" />\n            </Top>\n            <Middle>\n                <MiddleLeft>\n                    <MiddleLeftButtons>\n                        {renderLocaleButtons(i18n.language)}\n                    </MiddleLeftButtons>\n                </MiddleLeft>\n                <MiddleRight>\n                    <TopText>{t(\"common:Hello\")}</TopText>\n                    <Heading text={t(\"common:World\")} />\n                    <Apod>\n                        <ApodButton\n                            onClick={() => {\n                                dispatch(\n                                    HomeActions.GetApod({\n                                        params: { hd: false },\n                                    })\n                                );\n                            }}\n                        >\n                            Discover pushkar's Space\n                        </ApodButton>\n                        <img\n                            src={home.image.url}\n                            height=\"300\"\n                            width=\"150\"\n                            alt=\"Discover Space\"\n                        />\n                    </Apod>\n                </MiddleRight>\n            </Middle>\n        </Container>\n    );\n};\n\n// Home.getInitialProps = async (\n//     ctx: ReduxNextPageContext\n// ): Promise<IHomePage.InitialProps> => {\n//     await ctx.store.dispatch(\n//         HomeActions.GetApod({\n//             params: { hd: true },\n//         })\n//     );\n//     return { namespacesRequired: [\"common\"] };\n// };\n\nconst Extended = withTranslation(\"common\")(Home);\n\nexport const getServerSideProps: GetServerSideProps = async context => {\n    // const res = await new Promise((resolve, reject) => {\n    //     setTimeout(() => {\n    //         console.log(\"resolved!!!!!!\");\n    //         return resolve(1000);\n    //     }, 5000);\n    // });\n\n    const res = await Http.Request('GET', `http://3.7.5.125:4000/v1/company/U55209AP2018PTC107672`);\n    console.log(\"res: \", res);\n    // By returning { props: posts }, the Blog component\n    // will receive `posts` as a prop at build time\n    return {\n      props: {\n        res,\n      }\n    }\n}\n\nexport default Extended;\n"]},"metadata":{},"sourceType":"module"}