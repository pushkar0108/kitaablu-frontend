{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\n// #region Global Imports\nimport * as React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Http } from \"../../src/Services/API/Http\"; // #endregion Global Imports\n// #region Local Imports\n\nimport { withTranslation } from \"../../server/i18n\";\nimport { Container, Top, TopText, Middle, MiddleLeft, MiddleLeftButtons, MiddleRight, Apod, ApodButton } from \"../../src/Styled/Home\";\nimport { HomeActions } from \"../../src/Actions\";\nimport { Heading, LocaleButton } from \"../../src/Components\"; // #endregion Local Imports\n// #region Interface Imports\n\n// #endregion Interface Imports\nvar Home = function Home(props) {\n  console.log(\"props: \", props);\n  var t = props.t,\n      i18n = props.i18n,\n      cinData = props.cinData,\n      name = props.name;\n  debugger;\n  var home = useSelector(function (state) {\n    return state.home;\n  });\n  var dispatch = useDispatch();\n  console.log(\"cinData, name: \", cinData, name);\n\n  var renderLocaleButtons = function renderLocaleButtons(activeLanguage) {\n    return [\"en\", \"es\", \"tr\"].map(function (lang) {\n      return __jsx(LocaleButton, {\n        key: lang,\n        lang: lang,\n        isActive: activeLanguage === lang,\n        onClick: function onClick() {\n          return i18n.changeLanguage(lang);\n        }\n      });\n    });\n  };\n\n  return __jsx(Container, null, __jsx(Top, null, __jsx(\"img\", {\n    src: \"/images/pankod-logo.png\",\n    alt: \"Pankod Logo\"\n  })), __jsx(Middle, null, __jsx(MiddleLeft, null, __jsx(MiddleLeftButtons, null, renderLocaleButtons(i18n.language))), __jsx(MiddleRight, null, __jsx(TopText, null, t(\"common:Hello\")), __jsx(Heading, {\n    text: t(\"common:World\")\n  }), __jsx(Apod, null, __jsx(ApodButton, {\n    onClick: function onClick() {\n      dispatch(HomeActions.GetApod({\n        params: {\n          hd: false\n        }\n      }));\n    }\n  }, \"Discover pushkar's Space\"), __jsx(\"img\", {\n    src: home.image.url,\n    height: \"300\",\n    width: \"150\",\n    alt: \"Discover Space\"\n  })))));\n}; // Home.getInitialProps = async (\n//     ctx: ReduxNextPageContext\n// ): Promise<IHomePage.InitialProps> => {\n//     await ctx.store.dispatch(\n//         HomeActions.GetApod({\n//             params: { hd: true },\n//         })\n//     );\n//     return { namespacesRequired: [\"common\"] };\n// };\n\n\nvar Extended = withTranslation(\"common\")(Home);\nexport var getInitialProps = function getInitialProps(context) {\n  var cinData;\n  return _regeneratorRuntime.async(function getInitialProps$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Http.Request('GET', \"http://3.7.5.125:4000/v1/company/U55209AP2018PTC107672\"));\n\n        case 2:\n          cinData = _context.sent;\n          console.log(\"cinData on server side: \", cinData);\n          return _context.abrupt(\"return\", {\n            props: {\n              cinData: cinData,\n              name: \"pushkar\"\n            }\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport default Extended;","map":{"version":3,"sources":["/Users/pushkargoel/Myapps/next-boilerplate/pages/pushkar/index.tsx"],"names":["React","useSelector","useDispatch","Http","withTranslation","Container","Top","TopText","Middle","MiddleLeft","MiddleLeftButtons","MiddleRight","Apod","ApodButton","HomeActions","Heading","LocaleButton","Home","props","console","log","t","i18n","cinData","name","home","state","dispatch","renderLocaleButtons","activeLanguage","map","lang","changeLanguage","language","GetApod","params","hd","image","url","Extended","getInitialProps","context","Request"],"mappings":"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","sourcesContent":["// #region Global Imports\nimport * as React from \"react\";\nimport { NextPage, GetServerSideProps } from \"next\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Http } from '../../src/Services/API/Http';\n// #endregion Global Imports\n\n// #region Local Imports\nimport { withTranslation } from \"@Server/i18n\";\nimport {\n    Container,\n    Top,\n    TopText,\n    Middle,\n    MiddleLeft,\n    MiddleLeftButtons,\n    MiddleRight,\n    Apod,\n    ApodButton,\n} from \"@Styled/Home\";\nimport { IStore } from \"@Redux/IStore\";\nimport { HomeActions } from \"@Actions\";\nimport { Heading, LocaleButton } from \"@Components\";\n// #endregion Local Imports\n\n// #region Interface Imports\nimport { IHomePage, ReduxNextPageContext } from \"@Interfaces\";\n// #endregion Interface Imports\n\nconst Home: NextPage<IHomePage.IProps, IHomePage.InitialProps> = (props) => {\n    console.log(\"props: \", props);\n    let {\n        t,\n        i18n,\n        cinData,\n        name\n    } = props;\n\n    debugger;\n    const home = useSelector((state: IStore) => state.home);\n    const dispatch = useDispatch();\n\n    console.log(\"cinData, name: \", cinData, name);\n\n    const renderLocaleButtons = (activeLanguage: string) =>\n        [\"en\", \"es\", \"tr\"].map(lang => (\n            <LocaleButton\n                key={lang}\n                lang={lang}\n                isActive={activeLanguage === lang}\n                onClick={() => i18n.changeLanguage(lang)}\n            />\n        ));\n\n    return (\n        <Container>\n            <Top>\n                <img src=\"/images/pankod-logo.png\" alt=\"Pankod Logo\" />\n            </Top>\n            <Middle>\n                <MiddleLeft>\n                    <MiddleLeftButtons>\n                        {renderLocaleButtons(i18n.language)}\n                    </MiddleLeftButtons>\n                </MiddleLeft>\n                <MiddleRight>\n                    <TopText>{t(\"common:Hello\")}</TopText>\n                    <Heading text={t(\"common:World\")} />\n                    <Apod>\n                        <ApodButton\n                            onClick={() => {\n                                dispatch(\n                                    HomeActions.GetApod({\n                                        params: { hd: false },\n                                    })\n                                );\n                            }}\n                        >\n                            Discover pushkar's Space\n                        </ApodButton>\n                        <img\n                            src={home.image.url}\n                            height=\"300\"\n                            width=\"150\"\n                            alt=\"Discover Space\"\n                        />\n                    </Apod>\n                </MiddleRight>\n            </Middle>\n        </Container>\n    );\n};\n\n// Home.getInitialProps = async (\n//     ctx: ReduxNextPageContext\n// ): Promise<IHomePage.InitialProps> => {\n//     await ctx.store.dispatch(\n//         HomeActions.GetApod({\n//             params: { hd: true },\n//         })\n//     );\n//     return { namespacesRequired: [\"common\"] };\n// };\n\nconst Extended = withTranslation(\"common\")(Home);\n\nexport const getInitialProps = async (context) => {\n    const cinData = await Http.Request('GET', `http://3.7.5.125:4000/v1/company/U55209AP2018PTC107672`);\n    console.log(\"cinData on server side: \", cinData);\n    return {\n      props: {\n        cinData,\n        name: \"pushkar\"\n      }\n    }\n}\n\nexport default Extended;\n"]},"metadata":{},"sourceType":"module"}