{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// #region Global Imports\nimport * as React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\"; // #endregion Global Imports\n// #region Local Imports\n\nimport { withTranslation } from \"../../server/i18n\";\nimport { Container } from \"../../src/Styled/Home\";\nimport { HomeActions } from \"../../src/Actions\";\nimport { LocaleButton } from \"../../src/Components\"; // #endregion Local Imports\n// #region Interface Imports\n\n// #endregion Interface Imports\nconst Home = ({\n  t,\n  i18n\n}) => {\n  const home = useSelector(state => state.home);\n  const dispatch = useDispatch();\n\n  const renderLocaleButtons = activeLanguage => [\"en\", \"es\", \"tr\"].map(lang => __jsx(LocaleButton, {\n    key: lang,\n    lang: lang,\n    isActive: activeLanguage === lang,\n    onClick: () => i18n.changeLanguage(lang)\n  }));\n\n  return __jsx(Container, {\n    fluid: true,\n    className: \"main-content-container px-4\"\n  }, __jsx(Row, {\n    noGutters: true,\n    className: \"page-header py-4\"\n  }, __jsx(PageTitle, {\n    title: \"Overview\",\n    subtitle: \"Company\",\n    className: \"text-sm-left mb-3\"\n  })), __jsx(Row, null, smallStats.map((stats, idx) => __jsx(Col, _extends({\n    className: \"col-lg mb-4\",\n    key: idx\n  }, stats.attrs), __jsx(SmallStats, {\n    id: `small-stats-${idx}`,\n    variation: \"1\",\n    chartData: stats.datasets,\n    chartLabels: stats.chartLabels,\n    label: stats.label,\n    value: stats.value,\n    percentage: stats.percentage,\n    increase: stats.increase,\n    decrease: stats.decrease\n  })))), __jsx(Row, null, __jsx(Col, {\n    lg: \"4\",\n    md: \"6\",\n    sm: \"12\",\n    className: \"mb-4\"\n  }, __jsx(UsersByDevice, {\n    title: \"Distribution By Type\",\n    chartData: {\n      datasets: [{\n        hoverBorderColor: \"#ffffff\",\n        data: [68.3, 24.2, 7.5],\n        backgroundColor: [\"rgba(0,123,255,0.9)\", \"rgba(0,123,255,0.5)\", \"rgba(0,123,255,0.3)\"]\n      }],\n      labels: [\"Company\", \"LLP\", \"Other\"]\n    }\n  }))));\n};\n\nHome.getInitialProps = async ctx => {\n  await ctx.store.dispatch(HomeActions.GetApod({\n    params: {\n      hd: true\n    }\n  }));\n  return {\n    namespacesRequired: [\"common\"]\n  };\n};\n\nconst Extended = withTranslation(\"common\")(Home);\nexport default Extended;","map":{"version":3,"sources":["/Users/pushkargoel/Myapps/next-boilerplate/pages/home/index.tsx"],"names":["React","useSelector","useDispatch","withTranslation","Container","HomeActions","LocaleButton","Home","t","i18n","home","state","dispatch","renderLocaleButtons","activeLanguage","map","lang","changeLanguage","smallStats","stats","idx","attrs","datasets","chartLabels","label","value","percentage","increase","decrease","hoverBorderColor","data","backgroundColor","labels","getInitialProps","ctx","store","GetApod","params","hd","namespacesRequired","Extended"],"mappings":"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","sourcesContent":["// #region Global Imports\nimport * as React from \"react\";\nimport { NextPage } from \"next\";\nimport Link from 'next/link';\nimport { useSelector, useDispatch } from \"react-redux\";\n// #endregion Global Imports\n\n// #region Local Imports\nimport { withTranslation } from \"@Server/i18n\";\nimport {\n    Container,\n    Top,\n    TopText,\n    Middle,\n    MiddleLeft,\n    MiddleLeftButtons,\n    MiddleRight,\n    Apod,\n    ApodButton,\n} from \"@Styled/Home\";\nimport { IStore } from \"@Redux/IStore\";\nimport { HomeActions } from \"@Actions\";\nimport { Heading, LocaleButton } from \"@Components\";\n// #endregion Local Imports\n\n// #region Interface Imports\nimport { IHomePage, ReduxNextPageContext } from \"@Interfaces\";\n// #endregion Interface Imports\n\nconst Home: NextPage<IHomePage.IProps, IHomePage.InitialProps> = ({\n    t,\n    i18n,\n}) => {\n    const home = useSelector((state: IStore) => state.home);\n    const dispatch = useDispatch();\n\n    const renderLocaleButtons = (activeLanguage: string) =>\n        [\"en\", \"es\", \"tr\"].map(lang => (\n            <LocaleButton\n                key={lang}\n                lang={lang}\n                isActive={activeLanguage === lang}\n                onClick={() => i18n.changeLanguage(lang)}\n            />\n        ));\n\n    return (\n        <Container fluid className=\"main-content-container px-4\">\n            {/* Page Header */}\n            <Row noGutters className=\"page-header py-4\">\n                <PageTitle title=\"Overview\" subtitle=\"Company\" className=\"text-sm-left mb-3\" />\n            </Row>\n\n            {/* Small Stats Blocks */}\n            <Row>\n                {smallStats.map((stats, idx) => (\n                    <Col className=\"col-lg mb-4\" key={idx} {...stats.attrs}>\n                        <SmallStats\n                            id={`small-stats-${idx}`}\n                            variation=\"1\"\n                            chartData={stats.datasets}\n                            chartLabels={stats.chartLabels}\n                            label={stats.label}\n                            value={stats.value}\n                            percentage={stats.percentage}\n                            increase={stats.increase}\n                            decrease={stats.decrease}\n                        />\n                    </Col>\n                ))}\n            </Row>\n\n            <Row>\n                <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n                    <UsersByDevice\n                        title=\"Distribution By Type\"\n                        chartData={{\n                            datasets: [\n                                {\n                                    hoverBorderColor: \"#ffffff\",\n                                    data: [68.3, 24.2, 7.5],\n                                    backgroundColor: [\n                                        \"rgba(0,123,255,0.9)\",\n                                        \"rgba(0,123,255,0.5)\",\n                                        \"rgba(0,123,255,0.3)\"\n                                    ]\n                                }\n                            ],\n                            labels: [\"Company\", \"LLP\", \"Other\"]\n                        }}\n                    />\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nHome.getInitialProps = async (\n    ctx: ReduxNextPageContext\n): Promise<IHomePage.InitialProps> => {\n    await ctx.store.dispatch(\n        HomeActions.GetApod({\n            params: { hd: true },\n        })\n    );\n    return { namespacesRequired: [\"common\"] };\n};\n\nconst Extended = withTranslation(\"common\")(Home);\n\nexport default Extended;\n"]},"metadata":{},"sourceType":"module"}