{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport Link from 'next/link';\nimport { Http } from \"../../Services/API/Http\";\nconst SEARCH_URI = 'https://kitaablu.com/api/v1/search/';\n\nconst CustomAsyncTypeahead = () => {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: options,\n    1: setOptions\n  } = useState([]);\n\n  const handleSearch = async query => {\n    setIsLoading(true);\n\n    try {\n      const options = await Http.Request('GET', `${SEARCH_URI + query}`, {});\n      setOptions(options);\n    } catch (error) {\n      console.log(\"Error while fetching props: \", error);\n    }\n\n    setIsLoading(false);\n  };\n\n  return __jsx(AsyncTypeahead, {\n    id: \"async-example\",\n    isLoading: isLoading,\n    labelKey: \"name\",\n    minLength: 3,\n    onSearch: handleSearch,\n    options: options,\n    placeholder: \"Search using company name ...\",\n    renderMenuItemChildren: (option, props) => {\n      return __jsx(Link, {\n        href: \"/company/[cin]\",\n        as: `/company/${option.CIN}`\n      }, __jsx(\"div\", null, __jsx(\"a\", null, option.name)));\n    },\n    onChange: () => {\n      console.log('fire');\n    }\n  });\n};\n\nexport { CustomAsyncTypeahead as AsyncTypeahead };","map":{"version":3,"sources":["/Users/pushkargoel/Myapps/next-boilerplate/src/Components/AsyncTypeahead/index.tsx"],"names":["React","useState","AsyncTypeahead","Link","Http","SEARCH_URI","CustomAsyncTypeahead","isLoading","setIsLoading","options","setOptions","handleSearch","query","Request","error","console","log","option","props","CIN","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,SAASC,IAAT;AAEA,MAAMC,UAAU,GAAG,qCAAnB;;AACA,MAAMC,oBAAqE,GAAG,MAAmB;AAC7F,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACQ,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMU,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClCJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAI;AACA,YAAMC,OAAY,GAAG,MAAML,IAAI,CAACS,OAAL,CACvB,KADuB,EAEtB,GAAER,UAAU,GAAGO,KAAM,EAFC,EAGvB,EAHuB,CAA3B;AAMAF,MAAAA,UAAU,CAACD,OAAD,CAAV;AACH,KARD,CAQE,OAAOK,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,KAA5C;AACH;;AAEDN,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAhBD;;AAkBA,SACI,MAAC,cAAD;AACI,IAAA,EAAE,EAAC,eADP;AAEI,IAAA,SAAS,EAAED,SAFf;AAGI,IAAA,QAAQ,EAAC,MAHb;AAII,IAAA,SAAS,EAAE,CAJf;AAKI,IAAA,QAAQ,EAAEI,YALd;AAMI,IAAA,OAAO,EAAEF,OANb;AAOI,IAAA,WAAW,EAAC,+BAPhB;AAQI,IAAA,sBAAsB,EAAE,CAACQ,MAAD,EAASC,KAAT,KAAmB;AACvC,aACI,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,gBAAX;AAA4B,QAAA,EAAE,EAAG,YAAWD,MAAM,CAACE,GAAI;AAAvD,SACI,mBACI,iBAAIF,MAAM,CAACG,IAAX,CADJ,CADJ,CADJ;AAOH,KAhBL;AAiBI,IAAA,QAAQ,EAAE,MAAM;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;AAnBL,IADJ;AAuBH,CA7CD;;AA+CA,SAASV,oBAAoB,IAAIJ,cAAjC","sourcesContent":["import React, { useState } from \"react\";\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport Link from 'next/link';\n\nimport { IAsyncTypeahead } from \"./AsyncTypeahead\";\nimport { Http } from '../../Services/API/Http';\n\nconst SEARCH_URI = 'https://kitaablu.com/api/v1/search/';\nconst CustomAsyncTypeahead: React.FunctionComponent<IAsyncTypeahead.IProps> = (): JSX.Element => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [options, setOptions] = useState([]);\n\n    const handleSearch = async (query) => {\n        setIsLoading(true);\n\n        try {\n            const options: any = await Http.Request(\n                'GET',\n                `${SEARCH_URI + query}`,\n                {}\n            );\n\n            setOptions(options);\n        } catch (error) {\n            console.log(\"Error while fetching props: \", error);\n        }\n\n        setIsLoading(false);\n    };\n\n    return (\n        <AsyncTypeahead\n            id=\"async-example\"\n            isLoading={isLoading}\n            labelKey=\"name\"\n            minLength={3}\n            onSearch={handleSearch}\n            options={options}\n            placeholder=\"Search using company name ...\"\n            renderMenuItemChildren={(option, props) => {\n                return (\n                    <Link href=\"/company/[cin]\" as={`/company/${option.CIN}`}>\n                        <div>\n                            <a>{option.name}</a>\n                        </div>\n                    </Link>\n                )\n            }}\n            onChange={() => {\n                console.log('fire');\n            }}\n        />\n    );\n};\n\nexport { CustomAsyncTypeahead as AsyncTypeahead };\n"]},"metadata":{},"sourceType":"module"}