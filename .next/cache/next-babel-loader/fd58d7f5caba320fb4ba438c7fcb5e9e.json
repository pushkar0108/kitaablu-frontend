{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport { useRouter } from 'next/router';\nimport { Http } from \"../../Services/API/Http\";\nconst SEARCH_URI = 'https://kitaablu.com/api/v1/search/';\n\nconst CustomAsyncTypeahead = props => {\n  const router = useRouter();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: options,\n    1: setOptions\n  } = useState([]);\n\n  const handleSearch = async query => {\n    setIsLoading(true);\n\n    try {\n      const options = await Http.Request('GET', `${SEARCH_URI + query}`, {\n        type: props.type\n      });\n      setOptions(options);\n    } catch (error) {\n      console.log(\"Error while fetching props: \", error);\n    }\n\n    setIsLoading(false);\n  };\n\n  const changeRoute = options => {\n    if (options && options[0]) {\n      if (props.type == 'director') {\n        router.push(`/director/${options[0].value}`);\n      } else {\n        router.push(`/company/${options[0].value}`);\n      }\n    }\n  };\n\n  return __jsx(AsyncTypeahead, {\n    id: \"async-example\",\n    isLoading: isLoading,\n    labelKey: option => `${option.name} | ${option.value}`,\n    minLength: 3,\n    onSearch: handleSearch,\n    options: options,\n    placeholder: props.placeholder,\n    renderMenuItemChildren: (option, props) => __jsx(\"div\", null, `${option.name}`),\n    onChange: changeRoute\n  });\n};\n\nexport { CustomAsyncTypeahead as AsyncTypeahead };","map":null,"metadata":{},"sourceType":"module"}