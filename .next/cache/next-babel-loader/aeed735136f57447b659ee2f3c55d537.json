{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\n// #region Global Imports\nimport * as React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Http } from \"../../src/Services/API/Http\"; // #endregion Global Imports\n// #region Local Imports\n\nimport { withTranslation } from \"../../server/i18n\";\nimport { HomeActions } from \"../../src/Actions\";\nimport { LocaleButton } from \"../../src/Components\"; // #endregion Local Imports\n// #region Interface Imports\n\n// #endregion Interface Imports\nvar Home = function Home(_ref) {\n  var t = _ref.t,\n      i18n = _ref.i18n,\n      cinData = _ref.cinData;\n  var home = useSelector(function (state) {\n    return state.home;\n  });\n  var dispatch = useDispatch(); // remove later\n\n  var details = cinData;\n  var refData = [{\n    title: \"CIN\",\n    value: details[\"CIN\"]\n  }, {\n    title: \"Company Name\",\n    value: details[\"Company Name\"]\n  }, {\n    title: \"ROC Code\",\n    value: details[\"ROC Code\"]\n  }, {\n    title: \"Registration Number\",\n    value: details[\"Registration Number\"]\n  }, {\n    title: \"Company Category\",\n    value: details[\"Company Category\"]\n  }, {\n    title: \"Company SubCategory\",\n    value: details[\"Company SubCategory\"]\n  }, {\n    title: \"Class of Company\",\n    value: details[\"Class of Company\"]\n  }, {\n    title: \"Authorised Capital(Rs)\",\n    value: details[\"Authorised Capital(Rs)\"]\n  }, {\n    title: \"Paid up Capital(Rs)\",\n    value: details[\"Paid up Capital(Rs)\"]\n  }, {\n    title: \"Number of Members(Applicable in case of company without Share Capital)\",\n    value: details[\"Number of Members(Applicable in case of company without Share Capital)\"]\n  }, {\n    title: \"Date of Incorporation\",\n    value: details[\"Date of Incorporation\"]\n  }, {\n    title: \"Registered Address\",\n    value: details[\"Registered Address\"]\n  }, {\n    title: \"Address\",\n    value: details[\"Address other than R/o where all or any books of account and papers are maintained\"]\n  }, {\n    title: \"Email Id\",\n    value: details[\"Email Id\"]\n  }, {\n    title: \"Whether Listed or not\",\n    value: details[\"Whether Listed or not\"]\n  }, {\n    title: \"Suspended at stock exchange\",\n    value: details[\"Suspended at stock exchange\"]\n  }, {\n    title: \"Date of last AGM\",\n    value: details[\"Date of last AGM\"]\n  }, {\n    title: \"Date of Balance Sheet\",\n    value: details[\"Date of Balance Sheet\"]\n  }, {\n    title: \"Company Status(for efiling)\",\n    value: details[\"Company Status(for efiling)\"]\n  }];\n\n  var renderLocaleButtons = function renderLocaleButtons(activeLanguage) {\n    return [\"en\", \"es\", \"tr\"].map(function (lang) {\n      return __jsx(LocaleButton, {\n        key: lang,\n        lang: lang,\n        isActive: activeLanguage === lang,\n        onClick: function onClick() {\n          return i18n.changeLanguage(lang);\n        }\n      });\n    });\n  };\n\n  return __jsx(\"nav\", {\n    className: \"navbar navbar-expand-lg navbar-dark bg-dark\"\n  }, __jsx(\"a\", {\n    className: \"navbar-brand\",\n    href: \"#\"\n  }, \"Navbar w/ text\"), __jsx(\"button\", {\n    className: \"navbar-toggler\",\n    type: \"button\",\n    \"data-toggle\": \"collapse\",\n    \"data-target\": \"#navbarText\",\n    \"aria-controls\": \"navbarText\",\n    \"aria-expanded\": \"false\",\n    \"aria-label\": \"Toggle navigation\"\n  }, __jsx(\"span\", {\n    className: \"navbar-toggler-icon\"\n  })), __jsx(\"div\", {\n    className: \"collapse navbar-collapse\",\n    id: \"navbarText\"\n  }, __jsx(\"ul\", {\n    className: \"navbar-nav mr-auto\"\n  }, __jsx(\"li\", {\n    className: \"nav-item active\"\n  }, __jsx(\"a\", {\n    className: \"nav-link\",\n    href: \"#\"\n  }, \"Home \", __jsx(\"span\", {\n    className: \"sr-only\"\n  }, \"(current)\"))), __jsx(\"li\", {\n    className: \"nav-item\"\n  }, __jsx(\"a\", {\n    className: \"nav-link\",\n    href: \"#\"\n  }, \"Features\")), __jsx(\"li\", {\n    className: \"nav-item\"\n  }, __jsx(\"a\", {\n    className: \"nav-link\",\n    href: \"#\"\n  }, \"Pricing\"))), __jsx(\"span\", {\n    className: \"navbar-text\"\n  }, \"Navbar text with an inline element\")));\n};\n\nHome.getInitialProps = function _callee(ctx) {\n  var cin, cinData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          cin = ctx.query.cin;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Http.Request('GET', \"http://3.7.5.125:4000/v1/company/\".concat(cin)));\n\n        case 3:\n          cinData = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(ctx.store.dispatch(HomeActions.GetApod({\n            params: {\n              hd: true\n            }\n          })));\n\n        case 6:\n          return _context.abrupt(\"return\", {\n            namespacesRequired: [\"common\"],\n            cinData: cinData,\n            name: \"pushkar\"\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}; // export const getServerSideProps: GetServerSideProps = async (context) => {\n//     const cinData = await Http.Request('GET', `http://3.7.5.125:4000/v1/company/U55209AP2018PTC107672`);\n//     console.log(\"cinData on server side: \", cinData);\n//     return {\n//       props: {\n//         cinData,\n//         name: \"pushkar\"\n//       }\n//     }\n// }\n\n\nvar Extended = withTranslation(\"common\")(Home);\nexport default Extended;","map":{"version":3,"sources":["/Users/pushkargoel/Myapps/next-boilerplate/pages/company/[cin].tsx"],"names":["React","useSelector","useDispatch","Http","withTranslation","HomeActions","LocaleButton","Home","t","i18n","cinData","home","state","dispatch","details","refData","title","value","renderLocaleButtons","activeLanguage","map","lang","changeLanguage","getInitialProps","ctx","cin","query","Request","store","GetApod","params","hd","namespacesRequired","name","Extended"],"mappings":"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","sourcesContent":["// #region Global Imports\nimport * as React from \"react\";\nimport { NextPage, GetServerSideProps } from \"next\";\nimport Link from 'next/link';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Http } from '../../src/Services/API/Http';\n// #endregion Global Imports\n\n// #region Local Imports\nimport { withTranslation } from \"@Server/i18n\";\nimport {\n    Container,\n    Top,\n    TopText,\n    Middle,\n    MiddleLeft,\n    MiddleLeftButtons,\n    MiddleRight,\n    Apod,\n    ApodButton,\n} from \"@Styled/Home\";\nimport { IStore } from \"@Redux/IStore\";\nimport { HomeActions } from \"@Actions\";\nimport { Heading, LocaleButton } from \"@Components\";\n// #endregion Local Imports\n\n// #region Interface Imports\nimport { IHomePage, ReduxNextPageContext } from \"@Interfaces\";\n// #endregion Interface Imports\n\nconst Home: NextPage<IHomePage.IProps, IHomePage.InitialProps> = ({\n    t,\n    i18n,\n    cinData,\n}) => {\n\n    const home = useSelector((state: IStore) => state.home);\n    const dispatch = useDispatch();\n\n    // remove later\n    const details = cinData;\n    const refData = [\n        {\n            title: \"CIN\",\n            value: details[\"CIN\"]\n        },\n        {\n            title: \"Company Name\",\n            value: details[\"Company Name\"]\n        },\n        {\n            title: \"ROC Code\",\n            value: details[\"ROC Code\"]\n        },\n        {\n            title: \"Registration Number\",\n            value: details[\"Registration Number\"]\n        },\n        {\n            title: \"Company Category\",\n            value: details[\"Company Category\"]\n        },\n        {\n            title: \"Company SubCategory\",\n            value: details[\"Company SubCategory\"]\n        },\n        {\n            title: \"Class of Company\",\n            value: details[\"Class of Company\"]\n        },\n        {\n            title: \"Authorised Capital(Rs)\",\n            value: details[\"Authorised Capital(Rs)\"]\n        },\n        {\n            title: \"Paid up Capital(Rs)\",\n            value: details[\"Paid up Capital(Rs)\"]\n        },\n        {\n            title: \"Number of Members(Applicable in case of company without Share Capital)\",\n            value: details[\"Number of Members(Applicable in case of company without Share Capital)\"]\n        },\n        {\n            title: \"Date of Incorporation\",\n            value: details[\"Date of Incorporation\"]\n        },\n        {\n            title: \"Registered Address\",\n            value: details[\"Registered Address\"]\n        },\n        {\n            title: \"Address\",\n            value: details[\"Address other than R/o where all or any books of account and papers are maintained\"]\n        },\n        {\n            title: \"Email Id\",\n            value: details[\"Email Id\"]\n        },\n        {\n            title: \"Whether Listed or not\",\n            value: details[\"Whether Listed or not\"]\n        },\n        {\n            title: \"Suspended at stock exchange\",\n            value: details[\"Suspended at stock exchange\"]\n        },\n        {\n            title: \"Date of last AGM\",\n            value: details[\"Date of last AGM\"]\n        },\n        {\n            title: \"Date of Balance Sheet\",\n            value: details[\"Date of Balance Sheet\"]\n        },\n        {\n            title: \"Company Status(for efiling)\",\n            value: details[\"Company Status(for efiling)\"]\n        }\n    ];\n\n    const renderLocaleButtons = (activeLanguage: string) =>\n        [\"en\", \"es\", \"tr\"].map(lang => (\n            <LocaleButton\n                key={lang}\n                lang={lang}\n                isActive={activeLanguage === lang}\n                onClick={() => i18n.changeLanguage(lang)}\n            />\n        ));\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <a className=\"navbar-brand\" href=\"#\">Navbar w/ text</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n                <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item active\">\n                    <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n                </li>\n                <li className=\"nav-item\">\n                    <a className=\"nav-link\" href=\"#\">Features</a>\n                </li>\n                <li className=\"nav-item\">\n                    <a className=\"nav-link\" href=\"#\">Pricing</a>\n                </li>\n                </ul>\n                <span className=\"navbar-text\">\n                Navbar text with an inline element\n                </span>\n            </div>\n        </nav>\n    );\n};\n\nHome.getInitialProps = async (\n    ctx: ReduxNextPageContext\n): Promise<IHomePage.InitialProps> => {\n    const { cin } = ctx.query;\n    const cinData = await Http.Request('GET', `http://3.7.5.125:4000/v1/company/${cin}`);\n    await ctx.store.dispatch(\n        HomeActions.GetApod({\n            params: { hd: true },\n        })\n    );\n    return {\n        namespacesRequired: [\"common\"],\n        cinData,\n        name: \"pushkar\"\n    };\n};\n\n// export const getServerSideProps: GetServerSideProps = async (context) => {\n//     const cinData = await Http.Request('GET', `http://3.7.5.125:4000/v1/company/U55209AP2018PTC107672`);\n//     console.log(\"cinData on server side: \", cinData);\n//     return {\n//       props: {\n//         cinData,\n//         name: \"pushkar\"\n//       }\n//     }\n// }\n\n\nconst Extended = withTranslation(\"common\")(Home);\n\n\nexport default Extended;\n"]},"metadata":{},"sourceType":"module"}