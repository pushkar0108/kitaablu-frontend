{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport MOMENT from \"moment\";\nimport { Http } from \"../../../src/Services/API/Http\";\n\nvar EntityUpdate = function EntityUpdate(_ref) {\n  var lastUpdatedAt = _ref.lastUpdatedAt,\n      _ref$hideUpdateButton = _ref.hideUpdateButton,\n      hideUpdateButton = _ref$hideUpdateButton === void 0 ? false : _ref$hideUpdateButton,\n      entityType = _ref.entityType,\n      entityId = _ref.entityId;\n\n  var _useState = useState(false),\n      showAlert = _useState[0],\n      updateShowAlert = _useState[1];\n\n  useEffect(function () {\n    /* tslint:disable-next-line */\n    $(function () {\n      /* tslint:disable-next-line */\n      $('[data-toggle=\"tooltip\"]').tooltip();\n    });\n    $('[data-toggle=\"tooltip\"]').tooltip({\n      trigger: 'hover'\n    });\n  });\n  var entityUpdateAllowed = MOMENT().diff(MOMENT(lastUpdatedAt), 'days') > 7;\n\n  var handleClick = function handleClick() {\n    return _regeneratorRuntime.async(function handleClick$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Http.Request('POST', \"v1/entity/\".concat(entityType, \"/update/\").concat(entityId)));\n\n          case 3:\n            updateShowAlert(true);\n            setTimeout(function () {\n              updateShowAlert(false);\n            }, 4000);\n            _context.next = 9;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return __jsx(\"div\", {\n    className: \"mt-3\"\n  }, __jsx(\"div\", {\n    className: \"tool-tip\",\n    \"data-toggle\": \"tooltip\",\n    \"data-placement\": \"right\",\n    title: entityUpdateAllowed ? \"Click here to raise an updation request\" : \"Information is already upto date, cannot raise request\"\n  }, !hideUpdateButton && __jsx(\"button\", {\n    onClick: handleClick,\n    disabled: !entityUpdateAllowed,\n    type: \"button\",\n    className: \"btn btn-secondary btn-sm btn-block\"\n  }, \"Request Data Updation\")), __jsx(\"div\", {\n    className: \"mt-2 ml-1\"\n  }, __jsx(\"div\", null, \"Info last updated on \"), __jsx(\"div\", null, MOMENT(lastUpdatedAt).format(\"MMMM Do, YYYY\"))), showAlert && __jsx(\"div\", {\n    className: \"mt-2 alert alert-warning alert-dismissible fade show\",\n    role: \"alert\"\n  }, __jsx(\"strong\", null, \"Request Raised Successfully!\"), \" We will try to update the data as soon as possible, Kindly check after few minutes.\"));\n};\n\nexport { EntityUpdate };","map":null,"metadata":{},"sourceType":"module"}