{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport { useRouter } from 'next/router';\nimport { Http } from \"../../Services/API/Http\";\nconst SEARCH_URI = 'https://kitaablu.com/api/v1/search/';\n\nconst CustomAsyncTypeahead = () => {\n  const router = useRouter();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  const {\n    0: options,\n    1: setOptions\n  } = useState([]);\n\n  const handleSearch = async query => {\n    setIsLoading(true);\n\n    try {\n      const options = await Http.Request('GET', `${SEARCH_URI + query}`, {});\n      setOptions(options);\n    } catch (error) {\n      console.log(\"Error while fetching props: \", error);\n    }\n\n    setIsLoading(false);\n  };\n\n  const changeRoute = options => {\n    if (options && options[0]) {\n      router.push(`/company/${options[0].CIN}`);\n    }\n  };\n\n  return __jsx(AsyncTypeahead, {\n    id: \"async-example\",\n    isLoading: isLoading,\n    labelKey: option => `${option.name} | ${option.CIN}`,\n    minLength: 3,\n    onSearch: handleSearch,\n    options: options,\n    placeholder: \"Search using company name or CIN ...\",\n    renderMenuItemChildren: (option, props) => __jsx(\"div\", null, `${option.name}`),\n    onChange: changeRoute\n  });\n};\n\nexport { CustomAsyncTypeahead as AsyncTypeahead };","map":{"version":3,"sources":["/Users/pushkargoel/Myapps/next-boilerplate/src/Components/AsyncTypeahead/index.tsx"],"names":["React","useState","AsyncTypeahead","useRouter","Http","SEARCH_URI","CustomAsyncTypeahead","router","isLoading","setIsLoading","options","setOptions","handleSearch","query","Request","error","console","log","changeRoute","push","CIN","option","name","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAGA,SAASC,IAAT;AAEA,MAAMC,UAAU,GAAG,qCAAnB;;AACA,MAAMC,oBAAqE,GAAG,MAAmB;AAC7F,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM;AAAA,OAACK,SAAD;AAAA,OAAYC;AAAZ,MAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAA,OAACS,OAAD;AAAA,OAAUC;AAAV,MAAwBV,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMW,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClCJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAI;AACA,YAAMC,OAAY,GAAG,MAAMN,IAAI,CAACU,OAAL,CACvB,KADuB,EAEtB,GAAET,UAAU,GAAGQ,KAAM,EAFC,EAGvB,EAHuB,CAA3B;AAMAF,MAAAA,UAAU,CAACD,OAAD,CAAV;AACH,KARD,CAQE,OAAOK,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,KAA5C;AACH;;AAEDN,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAhBD;;AAkBA,QAAMS,WAAW,GAAIR,OAAD,IAAa;AAC7B,QAAGA,OAAO,IAAIA,OAAO,CAAC,CAAD,CAArB,EAA0B;AACtBH,MAAAA,MAAM,CAACY,IAAP,CAAa,YAAWT,OAAO,CAAC,CAAD,CAAP,CAAWU,GAAI,EAAvC;AACH;AACJ,GAJD;;AAMA,SACI,MAAC,cAAD;AACI,IAAA,EAAE,EAAC,eADP;AAEI,IAAA,SAAS,EAAEZ,SAFf;AAGI,IAAA,QAAQ,EAAEa,MAAM,IAAK,GAAEA,MAAM,CAACC,IAAK,MAAKD,MAAM,CAACD,GAAI,EAHvD;AAII,IAAA,SAAS,EAAE,CAJf;AAKI,IAAA,QAAQ,EAAER,YALd;AAMI,IAAA,OAAO,EAAEF,OANb;AAOI,IAAA,WAAW,EAAC,sCAPhB;AAQI,IAAA,sBAAsB,EAAE,CAACW,MAAD,EAASE,KAAT,KACpB,mBACM,GAAEF,MAAM,CAACC,IAAK,EADpB,CATR;AAaI,IAAA,QAAQ,EAAEJ;AAbd,IADJ;AAiBH,CA9CD;;AAgDA,SAASZ,oBAAoB,IAAIJ,cAAjC","sourcesContent":["import React, { useState } from \"react\";\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nimport { IAsyncTypeahead } from \"./AsyncTypeahead\";\nimport { Http } from '../../Services/API/Http';\n\nconst SEARCH_URI = 'https://kitaablu.com/api/v1/search/';\nconst CustomAsyncTypeahead: React.FunctionComponent<IAsyncTypeahead.IProps> = (): JSX.Element => {\n    const router = useRouter();\n    const [isLoading, setIsLoading] = useState(false);\n    const [options, setOptions] = useState([]);\n\n    const handleSearch = async (query) => {\n        setIsLoading(true);\n\n        try {\n            const options: any = await Http.Request(\n                'GET',\n                `${SEARCH_URI + query}`,\n                {}\n            );\n\n            setOptions(options);\n        } catch (error) {\n            console.log(\"Error while fetching props: \", error);\n        }\n\n        setIsLoading(false);\n    };\n\n    const changeRoute = (options) => {\n        if(options && options[0]) {\n            router.push(`/company/${options[0].CIN}`);\n        }\n    };\n\n    return (\n        <AsyncTypeahead\n            id=\"async-example\"\n            isLoading={isLoading}\n            labelKey={option => `${option.name} | ${option.CIN}`}\n            minLength={3}\n            onSearch={handleSearch}\n            options={options}\n            placeholder=\"Search using company name or CIN ...\"\n            renderMenuItemChildren={(option, props) => (\n                <div>\n                    {`${option.name}`}\n                </div>\n            )}\n            onChange={changeRoute}\n        />\n    );\n};\n\nexport { CustomAsyncTypeahead as AsyncTypeahead };\n"]},"metadata":{},"sourceType":"module"}