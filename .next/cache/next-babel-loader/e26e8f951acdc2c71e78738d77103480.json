{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport MOMENT from \"moment\";\nimport { Http } from \"../../../src/Services/API/Http\";\n\nconst EntityUpdate = ({\n  lastUpdatedAt,\n  entityType,\n  entityId\n}) => {\n  useEffect(() => {\n    /* tslint:disable-next-line */\n    $(function () {\n      /* tslint:disable-next-line */\n      $('[data-toggle=\"tooltip\"]').tooltip();\n    });\n  });\n  const entityUpdateAllowed = MOMENT().diff(MOMENT(lastUpdatedAt), 'days') > 7;\n\n  const handleClick = async () => {\n    try {\n      await Http.Request('POST', `https://kitaablu.com/api/v1/entity/${entityType}/update/${entityId}`);\n    } catch (error) {}\n  };\n\n  return __jsx(\"div\", {\n    className: \"mt-3 ml-1\"\n  }, __jsx(\"button\", {\n    onClick: handleClick,\n    disabled: !entityUpdateAllowed,\n    \"data-toggle\": \"tooltip\",\n    \"data-placement\": \"right\",\n    title: entityUpdateAllowed ? \"Click here to raise an updation request\" : \"Information is already upto date, cannot raise request\",\n    type: \"button\",\n    className: \"btn btn-secondary btn-sm btn-block\"\n  }, \"Request Data Updation\"), __jsx(\"div\", {\n    className: \"mt-2\"\n  }, \"Info last updated on \"), __jsx(\"div\", null, MOMENT(lastUpdatedAt).format(\"MMMM Do, YYYY\")), __jsx(\"div\", {\n    className: \"alert alert-warning alert-dismissible fade show\",\n    role: \"alert\"\n  }, __jsx(\"strong\", null, \"Holy guacamole!\"), \" You should check in on some of those fields below.\", __jsx(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"alert\",\n    \"aria-label\": \"Close\"\n  }, __jsx(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\"))));\n};\n\nexport { EntityUpdate };","map":{"version":3,"sources":["/Users/pushkargoel/Myapps/next-boilerplate/src/Components/EntityUpdate/index.tsx"],"names":["React","useEffect","MOMENT","Http","EntityUpdate","lastUpdatedAt","entityType","entityId","$","tooltip","entityUpdateAllowed","diff","handleClick","Request","error","format"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAGA,SAASC,IAAT;;AAEA,MAAMC,YAAwD,GAAG,CAAC;AAC9DC,EAAAA,aAD8D;AAE9DC,EAAAA,UAF8D;AAG9DC,EAAAA;AAH8D,CAAD,KAI9C;AAEfN,EAAAA,SAAS,CAAC,MAAM;AAAE;AACdO,IAAAA,CAAC,CAAC,YAAY;AAAE;AACXA,MAAAA,CAAC,CAAC,yBAAD,CAAF,CAAsCC,OAAtC;AACH,KAFA,CAAD;AAGH,GAJQ,CAAT;AAMA,QAAMC,mBAAmB,GAAGR,MAAM,GAAGS,IAAT,CAAcT,MAAM,CAACG,aAAD,CAApB,EAAqC,MAArC,IAA+C,CAA3E;;AACA,QAAMO,WAAW,GAAG,YAAY;AAC5B,QAAI;AACA,YAAMT,IAAI,CAACU,OAAL,CAAa,MAAb,EAAsB,sCAAqCP,UAAW,WAAUC,QAAS,EAAzF,CAAN;AACH,KAFD,CAEE,OAAOO,KAAP,EAAc,CAEf;AACJ,GAND;;AAQA,SAAO;AAAK,IAAA,SAAS,EAAC;AAAf,KACH;AACI,IAAA,OAAO,EAAEF,WADb;AAEI,IAAA,QAAQ,EAAE,CAACF,mBAFf;AAGI,mBAAY,SAHhB;AAII,sBAAe,OAJnB;AAKI,IAAA,KAAK,EACDA,mBAAmB,GACnB,yCADmB,GAEnB,wDARR;AAUI,IAAA,IAAI,EAAC,QAVT;AAWI,IAAA,SAAS,EAAC;AAXd,6BADG,EAeH;AAAK,IAAA,SAAS,EAAC;AAAf,6BAfG,EAgBH,mBAAMR,MAAM,CAACG,aAAD,CAAN,CAAsBU,MAAtB,CAA6B,eAA7B,CAAN,CAhBG,EAiBH;AAAK,IAAA,SAAS,EAAC,iDAAf;AAAiE,IAAA,IAAI,EAAC;AAAtE,KACI,wCADJ,yDAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,OAAhC;AAAwC,oBAAa,OAArD;AAA6D,kBAAW;AAAxE,KACI;AAAM,mBAAY;AAAlB,YADJ,CAFJ,CAjBG,CAAP;AAwBH,CA7CD;;AA+CA,SAASX,YAAT","sourcesContent":["import React, { useEffect } from \"react\";\nimport MOMENT from \"moment\";\n\nimport { EntityUpdateProps } from \"./EntityUpdate\";\nimport { Http } from '../../../src/Services/API/Http';\n\nconst EntityUpdate: React.FunctionComponent<EntityUpdateProps> = ({\n    lastUpdatedAt,\n    entityType,\n    entityId\n}): JSX.Element => {\n\n    useEffect(() => { /* tslint:disable-next-line */\n        $(function () { /* tslint:disable-next-line */\n            ($('[data-toggle=\"tooltip\"]') as any).tooltip()\n        });\n    });\n\n    const entityUpdateAllowed = MOMENT().diff(MOMENT(lastUpdatedAt), 'days') > 7;\n    const handleClick = async () => {\n        try {\n            await Http.Request('POST', `https://kitaablu.com/api/v1/entity/${entityType}/update/${entityId}`);\n        } catch (error) {\n            \n        }\n    };\n\n    return <div className=\"mt-3 ml-1\">\n        <button \n            onClick={handleClick}\n            disabled={!entityUpdateAllowed}\n            data-toggle=\"tooltip\" \n            data-placement=\"right\" \n            title = {\n                entityUpdateAllowed ? \n                \"Click here to raise an updation request\" : \n                \"Information is already upto date, cannot raise request\"\n            }\n            type=\"button\" \n            className=\"btn btn-secondary btn-sm btn-block\">\n            Request Data Updation\n        </button>\n        <div className=\"mt-2\">Info last updated on </div>\n        <div>{MOMENT(lastUpdatedAt).format(\"MMMM Do, YYYY\")}</div>\n        <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n            <strong>Holy guacamole!</strong> You should check in on some of those fields below.\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n        </div>\n    </div>;\n};\n\nexport { EntityUpdate };\n"]},"metadata":{},"sourceType":"module"}