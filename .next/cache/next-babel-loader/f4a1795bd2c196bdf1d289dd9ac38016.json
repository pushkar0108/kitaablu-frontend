{"ast":null,"code":"var __jsx = React.createElement;\n// #region Global Imports\nimport * as React from \"react\";\nimport _ from \"lodash\";\nimport { NextSeo } from 'next-seo';\nimport Link from 'next/link';\nimport { Http } from \"../../src/Services/API/Http\"; // #endregion Global Imports\n// #region Local Imports\n\nimport { withTranslation } from \"../../server/i18n\";\nimport { LocaleButton, Layout } from \"../../src/Components\"; // #endregion Local Imports\n// #region Interface Imports\n\n// #endregion Interface Imports\nconst Home = ({\n  t,\n  i18n,\n  cinData,\n  similarCompanies = []\n}) => {\n  if (!cinData) {\n    return __jsx(Layout, null, __jsx(\"div\", null, \"NO DATA PRESENT FOR CIN\"));\n  }\n\n  const details = JSON.parse(cinData.data);\n  const refData = [{\n    title: \"CIN\",\n    value: details[\"CIN\"]\n  }, {\n    title: \"Company Name\",\n    value: details[\"Company Name\"]\n  }, {\n    title: \"LLP Name\",\n    value: details[\"LLP Name\"]\n  }, {\n    title: \"ROC Code\",\n    value: details[\"ROC Code\"]\n  }, {\n    title: \"Registration Number\",\n    value: details[\"Registration Number\"]\n  }, {\n    title: \"Company Category\",\n    value: details[\"Company Category\"]\n  }, {\n    title: \"Company SubCategory\",\n    value: details[\"Company SubCategory\"]\n  }, {\n    title: \"Class of Company\",\n    value: details[\"Class of Company\"]\n  }, {\n    title: \"Authorised Capital(Rs)\",\n    value: details[\"Authorised Capital(Rs)\"]\n  }, {\n    title: \"Paid up Capital(Rs)\",\n    value: details[\"Paid up Capital(Rs)\"]\n  }, {\n    title: \"Number of Members(Applicable in case of company without Share Capital)\",\n    value: details[\"Number of Members(Applicable in case of company without Share Capital)\"]\n  }, {\n    title: \"Number of Partners\",\n    value: details[\"Number of Partners\"]\n  }, {\n    title: \"Number of Designated Partners\",\n    value: details[\"Number of Designated Partners\"]\n  }, {\n    title: \"Date of Incorporation\",\n    value: details[\"Date of Incorporation\"]\n  }, {\n    title: \"Registered Address\",\n    value: details[\"Registered Address\"]\n  }, {\n    title: \"Address\",\n    value: details[\"Address other than R/o where all or any books of account and papers are maintained\"]\n  }, {\n    title: \"Email Id\",\n    value: details[\"Email Id\"]\n  }, {\n    title: \"Whether Listed or not\",\n    value: details[\"Whether Listed or not\"]\n  }, {\n    title: \"Suspended at stock exchange\",\n    value: details[\"Suspended at stock exchange\"]\n  }, {\n    title: \"Date of last AGM\",\n    value: details[\"Date of last AGM\"]\n  }, {\n    title: \"Date of Balance Sheet\",\n    value: details[\"Date of Balance Sheet\"]\n  }, {\n    title: \"Company Status(for efiling)\",\n    value: details[\"Company Status(for efiling)\"]\n  }, {\n    title: \"LLP Status\",\n    value: details[\"LLP Status\"]\n  }];\n\n  const renderLocaleButtons = activeLanguage => [\"en\", \"es\", \"tr\"].map(lang => __jsx(LocaleButton, {\n    key: lang,\n    lang: lang,\n    isActive: activeLanguage === lang,\n    onClick: () => i18n.changeLanguage(lang)\n  }));\n\n  const companyName = details[\"Company Name\"] || details[\"LLP Name\"];\n  const SEO = {\n    title: `${companyName}, ${details[\"CIN\"]} - Company, charges, directors, CIN, DIN and contact details _ Kitaablu`,\n    description: `Company information, business information, directors/partners details and director/partners contact information of ${companyName}, ${details[\"CIN\"]}`\n  };\n  return __jsx(Layout, null, __jsx(NextSeo, {\n    title: SEO.title,\n    description: SEO.description\n  }), __jsx(\"h1\", {\n    className: \"my-4\"\n  }, __jsx(\"small\", null, details[\"CIN\"]), __jsx(\"div\", null, companyName)), __jsx(\"div\", {\n    className: \"card mb-4\"\n  }, __jsx(\"div\", {\n    className: \"card-body\"\n  }, __jsx(\"div\", {\n    className: \"table-responsive\"\n  }, __jsx(\"table\", {\n    className: \"table table-hover\"\n  }, __jsx(\"tbody\", null, refData.filter(data => data.value).map(data => {\n    return __jsx(\"tr\", {\n      key: data.title\n    }, __jsx(\"th\", {\n      scope: \"row\"\n    }, data.title), __jsx(\"td\", null, data.value));\n  })))))), __jsx(\"div\", {\n    className: \"card mb-4\"\n  }, __jsx(\"h2\", {\n    className: \"card-header\"\n  }, \"Directors\"), __jsx(\"div\", {\n    className: \"card-body\"\n  }, __jsx(\"div\", {\n    className: \"table-responsive\"\n  }, __jsx(\"table\", {\n    className: \"table table-hover\"\n  }, __jsx(\"thead\", null, __jsx(\"tr\", {\n    className: \"text-semibold text-fiord-blue\"\n  }, __jsx(\"th\", {\n    scope: \"col\"\n  }, \"#\"), __jsx(\"th\", {\n    scope: \"col\"\n  }, \"DIN/PAN\"), __jsx(\"th\", {\n    scope: \"col\"\n  }, \"Name\"), __jsx(\"th\", {\n    scope: \"col\"\n  }, \"Begin date\"), __jsx(\"th\", {\n    scope: \"col\"\n  }, \"End date\"), __jsx(\"th\", {\n    scope: \"col\"\n  }, \"Surrendered DIN\"))), __jsx(\"tbody\", null, details.dins.map((director, index) => {\n    return __jsx(\"tr\", {\n      key: `director_${director[0]}`,\n      className: \"text-semibold text-reagent-gray\"\n    }, __jsx(\"td\", null, index + 1), __jsx(\"td\", null, __jsx(Link, {\n      href: \"/director/[din]\",\n      as: `/director/${director[0]}`\n    }, __jsx(\"a\", null, director[0]))), __jsx(\"td\", null, director[6]), __jsx(\"td\", null, director[7]), __jsx(\"td\", null, director[8]), __jsx(\"td\", null, director[6]));\n  })))))), __jsx(\"div\", {\n    className: \"card mb-4\"\n  }, __jsx(\"h2\", {\n    className: \"card-header\"\n  }, \"Charges\"), __jsx(\"div\", {\n    className: \"card-body\"\n  }, __jsx(\"div\", {\n    className: \"table-responsive\"\n  }, __jsx(\"table\", {\n    className: \"table table-hover\"\n  }, __jsx(\"thead\", {\n    className: \"bg-light\"\n  }, __jsx(\"tr\", {\n    className: \"text-semibold text-fiord-blue\"\n  }, __jsx(\"th\", {\n    scope: \"col\",\n    className: \"border-0\"\n  }, \"#\"), __jsx(\"th\", {\n    scope: \"col\",\n    className: \"border-0\"\n  }, \"Assets under charge\"), __jsx(\"th\", {\n    scope: \"col\",\n    className: \"border-0\"\n  }, \"Charge Amount\"), __jsx(\"th\", {\n    scope: \"col\",\n    className: \"border-0\"\n  }, \"Date of Creation\"), __jsx(\"th\", {\n    scope: \"col\",\n    className: \"border-0\"\n  }, \"Date of Modification\"), __jsx(\"th\", {\n    scope: \"col\",\n    className: \"border-0\"\n  }, \"Status\"))), __jsx(\"tbody\", null, details.charges.map((charge, index) => {\n    return __jsx(\"tr\", {\n      key: `charge_${charge[1]}_${index}`,\n      className: \"text-semibold text-reagent-gray\"\n    }, __jsx(\"td\", null, index + 1), __jsx(\"td\", null, charge[0]), __jsx(\"td\", null, charge[1]), __jsx(\"td\", null, charge[2]), __jsx(\"td\", null, charge[3]), __jsx(\"td\", null, charge[4]));\n  })))))), __jsx(\"div\", {\n    className: \"card mb-4\"\n  }, __jsx(\"h3\", {\n    className: \"card-header\"\n  }, \"List of similar companies\"), __jsx(\"div\", {\n    className: \"card-body\"\n  }, similarCompanies.length ? __jsx(\"div\", {\n    className: \"table-responsive\"\n  }, __jsx(\"table\", {\n    className: \"table table-hover table-sm\"\n  }, __jsx(\"thead\", null, __jsx(\"tr\", {\n    className: \"text-semibold text-fiord-blue\"\n  }, __jsx(\"th\", {\n    scope: \"col\"\n  }, \"#\"), __jsx(\"th\", {\n    scope: \"col\"\n  }, \"CIN/FCRN\"), __jsx(\"th\", {\n    scope: \"col\"\n  }, \"Company Name\"))), __jsx(\"tbody\", null, similarCompanies.map((company, index) => {\n    return __jsx(\"tr\", {\n      key: `director_${company.CIN}`,\n      className: \"text-semibold text-reagent-gray\"\n    }, __jsx(\"td\", null, index + 1), __jsx(\"td\", null, __jsx(Link, {\n      href: \"/company/[cin]\",\n      as: `/company/${company.CIN}`\n    }, __jsx(\"a\", null, company.CIN))), __jsx(\"td\", null, company.company_name));\n  })))) : __jsx(\"div\", null, \"No similar company registered\"))));\n};\n\nHome.getInitialProps = async ctx => {\n  const {\n    cin\n  } = ctx.query;\n  const props = {\n    cinData: null,\n    similarCompanies: []\n  };\n\n  try {\n    props.cinData = await Http.Request('GET', `https://kitaablu.com/api/v1/company/${cin}`);\n    props.similarCompanies = await Http.Request('GET', `https://kitaablu.com/api/v1/company`, {\n      roc_code: _.get(props, 'cinData.roc_code', undefined),\n      class: _.get(props, 'cinData.class', undefined),\n      limit: 100\n    });\n  } catch (error) {\n    console.log(\"Error while fetching details for cin: \", cin, error);\n  }\n\n  return props;\n}; // export const getServerSideProps: GetServerSideProps = async (context) => {\n//     const cinData = await Http.Request('GET', `http://3.7.5.125:4000/v1/company/U55209AP2018PTC107672`);\n//     console.log(\"cinData on server side: \", cinData);\n//     return {\n//       props: {\n//         cinData,\n//         name: \"pushkar\"\n//       }\n//     }\n// }\n\n\nconst Extended = withTranslation(\"common\")(Home);\nexport default Extended;","map":null,"metadata":{},"sourceType":"module"}