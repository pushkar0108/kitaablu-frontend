{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\n// #region Global Imports\nimport * as React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Container, Row, Col } from \"shards-react\"; // #endregion Global Imports\n// #region Local Imports\n\nimport { withTranslation } from \"../../server/i18n\";\nimport { HomeActions } from \"../../src/Actions\";\nimport { LocaleButton } from \"../../src/Components\"; // #endregion Local Imports\n// #region Interface Imports\n\n// #endregion Interface Imports\nvar Home = function Home(_ref) {\n  var t = _ref.t,\n      i18n = _ref.i18n;\n  var home = useSelector(function (state) {\n    return state.home;\n  });\n  var dispatch = useDispatch();\n\n  var renderLocaleButtons = function renderLocaleButtons(activeLanguage) {\n    return [\"en\", \"es\", \"tr\"].map(function (lang) {\n      return __jsx(LocaleButton, {\n        key: lang,\n        lang: lang,\n        isActive: activeLanguage === lang,\n        onClick: function onClick() {\n          return i18n.changeLanguage(lang);\n        }\n      });\n    });\n  };\n\n  return __jsx(Container, {\n    fluid: true,\n    className: \"main-content-container px-4\"\n  }, __jsx(Row, {\n    noGutters: true,\n    className: \"page-header py-4\"\n  }, __jsx(PageTitle, {\n    title: \"Overview\",\n    subtitle: \"Company\",\n    className: \"text-sm-left mb-3\"\n  })), __jsx(Row, null, smallStats.map(function (stats, idx) {\n    return __jsx(Col, _extends({\n      className: \"col-lg mb-4\",\n      key: idx\n    }, stats.attrs), __jsx(SmallStats, {\n      id: \"small-stats-\".concat(idx),\n      variation: \"1\",\n      chartData: stats.datasets,\n      chartLabels: stats.chartLabels,\n      label: stats.label,\n      value: stats.value,\n      percentage: stats.percentage,\n      increase: stats.increase,\n      decrease: stats.decrease\n    }));\n  })), __jsx(Row, null, __jsx(Col, {\n    lg: \"4\",\n    md: \"6\",\n    sm: \"12\",\n    className: \"mb-4\"\n  }, __jsx(UsersByDevice, {\n    title: \"Distribution By Type\",\n    chartData: {\n      datasets: [{\n        hoverBorderColor: \"#ffffff\",\n        data: [68.3, 24.2, 7.5],\n        backgroundColor: [\"rgba(0,123,255,0.9)\", \"rgba(0,123,255,0.5)\", \"rgba(0,123,255,0.3)\"]\n      }],\n      labels: [\"Company\", \"LLP\", \"Other\"]\n    }\n  }))));\n};\n\nHome.getInitialProps = function _callee(ctx) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(ctx.store.dispatch(HomeActions.GetApod({\n            params: {\n              hd: true\n            }\n          })));\n\n        case 2:\n          return _context.abrupt(\"return\", {\n            namespacesRequired: [\"common\"]\n          });\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar Extended = withTranslation(\"common\")(Home);\nexport default Extended;","map":{"version":3,"sources":["/Users/pushkargoel/Myapps/next-boilerplate/pages/home/index.tsx"],"names":["React","useSelector","useDispatch","Container","Row","Col","withTranslation","HomeActions","LocaleButton","Home","t","i18n","home","state","dispatch","renderLocaleButtons","activeLanguage","map","lang","changeLanguage","smallStats","stats","idx","attrs","datasets","chartLabels","label","value","percentage","increase","decrease","hoverBorderColor","data","backgroundColor","labels","getInitialProps","ctx","store","GetApod","params","hd","namespacesRequired","Extended"],"mappings":"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","sourcesContent":["// #region Global Imports\nimport * as React from \"react\";\nimport { NextPage } from \"next\";\nimport Link from 'next/link';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Container, Row, Col } from \"shards-react\";\n// #endregion Global Imports\n\n// #region Local Imports\nimport { withTranslation } from \"@Server/i18n\";\nimport {\n    // Container,\n    Top,\n    TopText,\n    Middle,\n    MiddleLeft,\n    MiddleLeftButtons,\n    MiddleRight,\n    Apod,\n    ApodButton,\n} from \"@Styled/Home\";\nimport { IStore } from \"@Redux/IStore\";\nimport { HomeActions } from \"@Actions\";\nimport { Heading, LocaleButton } from \"@Components\";\n// #endregion Local Imports\n\n// #region Interface Imports\nimport { IHomePage, ReduxNextPageContext } from \"@Interfaces\";\n// #endregion Interface Imports\n\nconst Home: NextPage<IHomePage.IProps, IHomePage.InitialProps> = ({\n    t,\n    i18n,\n}) => {\n    const home = useSelector((state: IStore) => state.home);\n    const dispatch = useDispatch();\n\n    const renderLocaleButtons = (activeLanguage: string) =>\n        [\"en\", \"es\", \"tr\"].map(lang => (\n            <LocaleButton\n                key={lang}\n                lang={lang}\n                isActive={activeLanguage === lang}\n                onClick={() => i18n.changeLanguage(lang)}\n            />\n        ));\n\n    return (\n        <Container fluid className=\"main-content-container px-4\">\n            {/* Page Header */}\n            <Row noGutters className=\"page-header py-4\">\n                <PageTitle title=\"Overview\" subtitle=\"Company\" className=\"text-sm-left mb-3\" />\n            </Row>\n\n            {/* Small Stats Blocks */}\n            <Row>\n                {smallStats.map((stats, idx) => (\n                    <Col className=\"col-lg mb-4\" key={idx} {...stats.attrs}>\n                        <SmallStats\n                            id={`small-stats-${idx}`}\n                            variation=\"1\"\n                            chartData={stats.datasets}\n                            chartLabels={stats.chartLabels}\n                            label={stats.label}\n                            value={stats.value}\n                            percentage={stats.percentage}\n                            increase={stats.increase}\n                            decrease={stats.decrease}\n                        />\n                    </Col>\n                ))}\n            </Row>\n\n            <Row>\n                <Col lg=\"4\" md=\"6\" sm=\"12\" className=\"mb-4\">\n                    <UsersByDevice\n                        title=\"Distribution By Type\"\n                        chartData={{\n                            datasets: [\n                                {\n                                    hoverBorderColor: \"#ffffff\",\n                                    data: [68.3, 24.2, 7.5],\n                                    backgroundColor: [\n                                        \"rgba(0,123,255,0.9)\",\n                                        \"rgba(0,123,255,0.5)\",\n                                        \"rgba(0,123,255,0.3)\"\n                                    ]\n                                }\n                            ],\n                            labels: [\"Company\", \"LLP\", \"Other\"]\n                        }}\n                    />\n                </Col>\n            </Row>\n\n        </Container>\n    );\n};\n\nHome.getInitialProps = async (\n    ctx: ReduxNextPageContext\n): Promise<IHomePage.InitialProps> => {\n    await ctx.store.dispatch(\n        HomeActions.GetApod({\n            params: { hd: true },\n        })\n    );\n    return { namespacesRequired: [\"common\"] };\n};\n\nconst Extended = withTranslation(\"common\")(Home);\n\nexport default Extended;\n"]},"metadata":{},"sourceType":"module"}