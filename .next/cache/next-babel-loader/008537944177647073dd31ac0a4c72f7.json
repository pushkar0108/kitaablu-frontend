{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport MOMENT from \"moment\";\nimport { Http } from \"../../../src/Services/API/Http\";\n\nconst EntityUpdate = ({\n  lastUpdatedAt,\n  hideUpdateButton = false,\n  entityType,\n  entityId\n}) => {\n  const {\n    0: showAlert,\n    1: updateShowAlert\n  } = useState(false);\n  useEffect(() => {\n    /* tslint:disable-next-line */\n    $(function () {\n      /* tslint:disable-next-line */\n      $('[data-toggle=\"tooltip\"]').tooltip();\n    });\n    $('[data-toggle=\"tooltip\"]').tooltip({\n      trigger: 'hover'\n    });\n  });\n  const entityUpdateAllowed = MOMENT().diff(MOMENT(lastUpdatedAt), 'days') > 7;\n\n  const handleClick = async () => {\n    try {\n      await Http.Request('POST', `v1/entity/${entityType}/update/${entityId}`);\n      updateShowAlert(true);\n      setTimeout(() => {\n        updateShowAlert(false);\n      }, 4000);\n    } catch (error) {}\n  };\n\n  return __jsx(\"div\", {\n    className: \"mt-3\"\n  }, __jsx(\"div\", {\n    className: \"tool-tip\",\n    \"data-toggle\": \"tooltip\",\n    \"data-placement\": \"right\",\n    title: entityUpdateAllowed ? \"Click here to raise an updation request\" : \"Information is already upto date, cannot raise request\"\n  }, !hideUpdateButton && __jsx(\"button\", {\n    onClick: handleClick,\n    disabled: !entityUpdateAllowed,\n    type: \"button\",\n    className: \"btn btn-secondary btn-sm btn-block\"\n  }, \"Request Data Updation\")), __jsx(\"div\", {\n    className: \"mt-2 ml-1\"\n  }, __jsx(\"div\", null, \"Info last updated on \"), __jsx(\"div\", null, MOMENT(lastUpdatedAt).format(\"MMMM Do, YYYY\"))), showAlert && __jsx(\"div\", {\n    className: \"mt-2 alert alert-warning alert-dismissible fade show\",\n    role: \"alert\"\n  }, __jsx(\"strong\", null, \"Request Raised Successfully!\"), \" We will try to update the data as soon as possible, Kindly check after few minutes.\"));\n};\n\nexport { EntityUpdate };","map":{"version":3,"sources":["/Users/pushkar.goel/Myapps/next-boilerplate/src/Components/EntityUpdate/index.tsx"],"names":["React","useEffect","useState","MOMENT","Http","EntityUpdate","lastUpdatedAt","hideUpdateButton","entityType","entityId","showAlert","updateShowAlert","$","tooltip","trigger","entityUpdateAllowed","diff","handleClick","Request","setTimeout","error","format"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAGA,SAASC,IAAT;;AAEA,MAAMC,YAAwD,GAAG,CAAC;AAC9DC,EAAAA,aAD8D;AAE9DC,EAAAA,gBAAgB,GAAG,KAF2C;AAG9DC,EAAAA,UAH8D;AAI9DC,EAAAA;AAJ8D,CAAD,KAK9C;AACf,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA+BT,QAAQ,CAAC,KAAD,CAA7C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAAE;AACdW,IAAAA,CAAC,CAAC,YAAY;AAAE;AACXA,MAAAA,CAAC,CAAC,yBAAD,CAAF,CAAsCC,OAAtC;AACH,KAFA,CAAD;AAICD,IAAAA,CAAC,CAAC,yBAAD,CAAF,CAAsCC,OAAtC,CAA8C;AAC1CC,MAAAA,OAAO,EAAG;AADgC,KAA9C;AAGH,GARQ,CAAT;AAUA,QAAMC,mBAAmB,GAAGZ,MAAM,GAAGa,IAAT,CAAcb,MAAM,CAACG,aAAD,CAApB,EAAqC,MAArC,IAA+C,CAA3E;;AACA,QAAMW,WAAW,GAAG,YAAY;AAC5B,QAAI;AACA,YAAMb,IAAI,CAACc,OAAL,CAAa,MAAb,EAAsB,aAAYV,UAAW,WAAUC,QAAS,EAAhE,CAAN;AACAE,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAQ,MAAAA,UAAU,CAAC,MAAM;AACbR,QAAAA,eAAe,CAAC,KAAD,CAAf;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KAND,CAME,OAAOS,KAAP,EAAc,CAEf;AACJ,GAVD;;AAYA,SAAO;AAAK,IAAA,SAAS,EAAC;AAAf,KACH;AAAK,IAAA,SAAS,EAAC,UAAf;AACI,mBAAY,SADhB;AAEI,sBAAe,OAFnB;AAGI,IAAA,KAAK,EACDL,mBAAmB,GACnB,yCADmB,GAEnB;AANR,KASQ,CAACR,gBAAD,IAAqB;AACjB,IAAA,OAAO,EAAEU,WADQ;AAEjB,IAAA,QAAQ,EAAE,CAACF,mBAFM;AAGjB,IAAA,IAAI,EAAC,QAHY;AAIjB,IAAA,SAAS,EAAC;AAJO,6BAT7B,CADG,EAmBH;AAAK,IAAA,SAAS,EAAC;AAAf,KACI,2CADJ,EAEI,mBAAMZ,MAAM,CAACG,aAAD,CAAN,CAAsBe,MAAtB,CAA6B,eAA7B,CAAN,CAFJ,CAnBG,EAwBCX,SAAS,IACL;AAAK,IAAA,SAAS,EAAC,sDAAf;AAAsE,IAAA,IAAI,EAAC;AAA3E,KACI,qDADJ,yFAzBL,CAAP;AAmCH,CAlED;;AAoEA,SAASL,YAAT","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport MOMENT from \"moment\";\n\nimport { EntityUpdateProps } from \"./EntityUpdate\";\nimport { Http } from '../../../src/Services/API/Http';\n\nconst EntityUpdate: React.FunctionComponent<EntityUpdateProps> = ({\n    lastUpdatedAt,\n    hideUpdateButton = false,\n    entityType,\n    entityId\n}): JSX.Element => {\n    const [showAlert, updateShowAlert] = useState(false);\n\n    useEffect(() => { /* tslint:disable-next-line */\n        $(function () { /* tslint:disable-next-line */\n            ($('[data-toggle=\"tooltip\"]') as any).tooltip()\n        });\n\n        ($('[data-toggle=\"tooltip\"]') as any).tooltip({\n            trigger : 'hover'\n        });\n    });\n\n    const entityUpdateAllowed = MOMENT().diff(MOMENT(lastUpdatedAt), 'days') > 7;\n    const handleClick = async () => {\n        try {\n            await Http.Request('POST', `v1/entity/${entityType}/update/${entityId}`);\n            updateShowAlert(true);\n            setTimeout(() => {\n                updateShowAlert(false);\n            }, 4000);\n        } catch (error) {\n            \n        }\n    };\n\n    return <div className=\"mt-3\">\n        <div className=\"tool-tip\" \n            data-toggle=\"tooltip\" \n            data-placement=\"right\" \n            title = {\n                entityUpdateAllowed ? \n                \"Click here to raise an updation request\" : \n                \"Information is already upto date, cannot raise request\"\n            }>\n            {\n                !hideUpdateButton && <button \n                    onClick={handleClick}\n                    disabled={!entityUpdateAllowed}\n                    type=\"button\" \n                    className=\"btn btn-secondary btn-sm btn-block\">\n                    Request Data Updation\n                </button>\n            }\n        </div>\n        <div className=\"mt-2 ml-1\">\n            <div>Info last updated on </div>\n            <div>{MOMENT(lastUpdatedAt).format(\"MMMM Do, YYYY\")}</div>\n        </div>\n        {\n            showAlert && (\n                <div className=\"mt-2 alert alert-warning alert-dismissible fade show\" role=\"alert\">\n                    <strong>Request Raised Successfully!</strong> We will try to update the data as soon as possible, Kindly check after few minutes.\n                    {/* <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button> */}\n                </div>\n            )\n        }\n        \n    </div>;\n};\n\nexport { EntityUpdate };\n"]},"metadata":{},"sourceType":"module"}