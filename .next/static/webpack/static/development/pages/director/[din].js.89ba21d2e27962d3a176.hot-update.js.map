{"version":3,"file":"static/webpack/static/development/pages/director/[din].js.89ba21d2e27962d3a176.hot-update.js","sources":["webpack:///./pages/director/[din].tsx"],"sourcesContent":["// #region Global Imports\nimport React, { useEffect } from \"react\";\nimport { NextPage, GetServerSideProps } from \"next\";\nimport Link from 'next/link';\nimport { NextSeo } from 'next-seo';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Http } from '../../src/Services/API/Http';\n// #endregion Global Imports\n\n// #region Local Imports\nimport { withTranslation } from \"@Server/i18n\";\nimport {\n    Container,\n    Top,\n    TopText,\n    Middle,\n    MiddleLeft,\n    MiddleLeftButtons,\n    MiddleRight,\n    Apod,\n    ApodButton,\n} from \"@Styled/Home\";\nimport { IStore } from \"@Redux/IStore\";\nimport { HomeActions } from \"@Actions\";\nimport { Heading, LocaleButton, Layout } from \"@Components\";\n// #endregion Local Imports\n\n// #region Interface Imports\nimport { IDirectorPage, ReduxNextPageContext } from \"@Interfaces\";\n// #endregion Interface Imports\n\nconst Home: NextPage<IDirectorPage.IProps, IDirectorPage.InitialProps> = ({\n    t,\n    i18n,\n    dinData,\n}) => {\n    useEffect(() => { /* tslint:disable-next-line */\n        $(function () { /* tslint:disable-next-line */\n            ($('[data-toggle=\"tooltip\"]') as any).tooltip()\n        });\n    });\n\n    const refData = [\n        {\n            title: \"DIN\",\n            value: dinData[\"DIN\"]\n        },\n        {\n            title: \"Name\",\n            value: dinData[\"name\"]\n        },\n        {\n            title: \"Date of birth\",\n            value: '*********',\n            tooltip: true\n        },\n        {\n            title: \"Father Name\",\n            value: '*********',\n            tooltip: true\n        },\n        {\n            title: \"Mobile\",\n            value: '*********',\n            tooltip: true\n        },\n        {\n            title: \"Phone\",\n            value: '*********',\n            tooltip: true\n        },\n        {\n            title: \"Email\",\n            value: '*********',\n            tooltip: true\n        },\n        {\n            title: \"Address\",\n            value: '*********',\n            tooltip: true\n        },\n        {\n            title: \"City\",\n            value: dinData[\"city\"]\n        },\n        {\n            title: \"Gender\",\n            value: dinData[\"gender\"]\n        }\n    ];\n\n    const directorName = dinData[\"name\"];\n    const SEO = {\n        title: `${dinData[\"name\"]}, ${dinData[\"DIN\"]} - Company, charges, directors, CIN, DIN and contact details _ Kitaablu`,\n        description: `Company information, business information, directors/partners details and director/partners contact information of ${directorName}, ${dinData[\"DIN\"]}`\n    };\n\n    return (\n        <Layout\n            containerClass = \"container-fluid\"\n            gridSize = {{\n                left: 'col-md-2',\n                mid: 'col-lg-7 col-md-8',\n                right: 'col-lg-3 col-md-4'\n            }}\n            leftNav = {\n                <div id=\"list-example\" className=\"list-group sticky-top\" style={{ top: '100px' }}>\n                    <a className=\"list-group-item list-group-item-action\" href=\"#basicInfo\">Basic Information</a>\n                    <a className=\"list-group-item list-group-item-action\" href=\"#companyList\">List Of Companies</a>\n                    <a className=\"list-group-item list-group-item-action\" href=\"#llpList\">List Of LLPs</a>\n                </div>\n            }\n        >\n            <NextSeo\n                title={SEO.title}\n                description={SEO.description}\n            />\n            <h1 className=\"my-4\">\n                <small>{dinData[\"DIN\"]}</small>\n                <div>{directorName}</div>\n            </h1>\n\n            <h4 id=\"basicInfo\">Basic Information</h4>\n            <div className=\"card mb-4 shadow bg-white rounded\">\n                <div className=\"card-body\">\n                    <div className=\"table-responsive\">\n                        <table className=\"table table-hover\">\n                            <tbody>\n                                {\n                                    refData.map(data => {\n                                        return (\n                                            <tr key={data.title}>\n                                                <th scope=\"row\">{data.title}</th>\n                                                <td>\n                                                    {\n                                                        data.tooltip ? (\n                                                            <button type=\"button\" className=\"btn btn-secondary btn-sm\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Contact us at kitaablueterprise@gmail.com\">\n                                                                {data.value}\n                                                            </button>\n                                                            \n                                                        ) : data.value\n                                                    }\n                                                </td>\n                                                \n                                            </tr>\n                                        )\n                                    })\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n\n            <h4 id=\"companyList\">List Of Companies</h4>\n            <div className=\"card mb-4 shadow bg-white rounded\">\n                <div className=\"card-body\">\n                    {\n                        dinData.companies.length ? (\n                            <div className=\"table-responsive\">\n                                <table className=\"table table-hover\">\n                                    <thead>\n                                        <tr className=\"text-semibold text-fiord-blue\">\n                                            <th scope=\"col\">#</th>\n                                            <th scope=\"col\">CIN/FCRN</th>\n                                            <th scope=\"col\">Company Name</th>\n                                            <th scope=\"col\">Begin date</th>\n                                            <th scope=\"col\">End date</th>\n                                            <th scope=\"col\">Active compliance</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            dinData.companies.map((company, index) => {\n                                                return (\n                                                    <tr key={`director_${company.CIN}`} className=\"text-semibold text-reagent-gray\">\n                                                        <td>{index + 1}</td>\n                                                        <td>\n                                                            <Link href=\"/company/[cin]\" as={`/company/${company.CIN}`}>\n                                                                <a>{company.CIN}</a>\n                                                            </Link>\n                                                        </td>\n                                                        <td>{company.name}</td>\n                                                        <td>{company.beginDate}</td>\n                                                        <td>{company.endDate}</td>\n                                                        <td>{company.status}</td>\n                                                    </tr>\n                                                );\n                                            })\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                        ) :\n                        <div>\n                            {`No Companies mapped ${dinData[\"name\"]}`}\n                        </div>\n                    }\n                </div>\n            </div>\n\n            <h4 id=\"llpList\">List Of LLP</h4>\n            <div className=\"card mb-4 shadow bg-white rounded\">\n                <div className=\"card-body\">\n                    {\n                        dinData.llps.length ? (\n                            <div className=\"table-responsive\">\n                                <table className=\"table table-hover\">\n                                    <thead className=\"bg-light\">\n                                        <tr className=\"text-semibold text-fiord-blue\">\n                                            <th scope=\"col\" className=\"border-0\">#</th>\n                                            <th scope=\"col\" className=\"border-0\">LLPIN/FLLPIN</th>\n                                            <th scope=\"col\" className=\"border-0\">LLP Name</th>\n                                            <th scope=\"col\" className=\"border-0\">Begin date</th>\n                                            <th scope=\"col\" className=\"border-0\">End date</th>\n                                            <th scope=\"col\" className=\"border-0\">Status</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            dinData.llps.map((llp, index) => {\n                                                return (\n                                                    <tr key={`charge_${llp.CIN}`} className=\"text-semibold text-reagent-gray\">\n                                                        <td>{index + 1}</td>\n                                                        <td>\n                                                            <Link href=\"/company/[cin]\" as={`/company/${llp.CIN}`}>\n                                                                <a>{llp.CIN}</a>\n                                                            </Link>\n                                                        </td>\n                                                        <td>{llp.name}</td>\n                                                        <td>{llp.beginDate}</td>\n                                                        <td>{llp.endDate}</td>\n                                                        <td>{llp.status}</td>\n                                                    </tr>\n                                                );\n                                            })\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                        ) :\n                        <div>\n                            {`No LLPs mapped to ${dinData[\"name\"]}`}\n                        </div>\n                    }\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nHome.getInitialProps = async (\n    ctx: ReduxNextPageContext\n): Promise<IDirectorPage.InitialProps> => {\n    const { din } = ctx.query;\n    const dinData = await Http.Request('GET', `https://kitaablu.com/api/v1/director/${din}`);\n\n    await ctx.store.dispatch(\n        HomeActions.GetApod({\n            params: { hd: true },\n        })\n    );\n    return {\n        namespacesRequired: [\"common\"],\n        dinData,\n    };\n};\n\n\nconst Extended = withTranslation(\"common\")(Home);\nexport default Extended;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AAAA;AAaA;AACA;AAGA;AACA;AACA;AAEA;AAIA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AACA;AACA;AAFA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAXA;AAgBA;AACA;AAFA;AAIA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAUA;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAUA;AAcA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AAQA;AAAA;AAAA;AADA;AACA;AARA;AAAA;AAYA;AACA;AAFA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAiBA;AACA;;;;A","sourceRoot":""}