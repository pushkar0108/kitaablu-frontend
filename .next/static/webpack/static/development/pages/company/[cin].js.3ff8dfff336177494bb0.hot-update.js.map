{"version":3,"file":"static/webpack/static/development/pages/company/[cin].js.3ff8dfff336177494bb0.hot-update.js","sources":["webpack:///./src/Components/AsyncTypeahead/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead';\nimport { useRouter } from 'next/router';\n\nimport { IAsyncTypeahead } from \"./AsyncTypeahead\";\nimport { Http } from '../../Services/API/Http';\n\nconst SEARCH_URI = 'https://kitaablu.com/api/v1/search/';\nconst CustomAsyncTypeahead: React.FunctionComponent<IAsyncTypeahead.IProps> = (props): JSX.Element => {\n    const router = useRouter();\n    const [isLoading, setIsLoading] = useState(false);\n    const [options, setOptions] = useState([]);\n\n    const handleSearch = async (query) => {\n        setIsLoading(true);\n\n        try {\n            const options: any = await Http.Request(\n                'GET',\n                `${SEARCH_URI + query}`,\n                {\n                    type: props.type\n                }\n            );\n\n            setOptions(options);\n        } catch (error) {\n            console.log(\"Error while fetching props: \", error);\n        }\n\n        setIsLoading(false);\n    };\n\n    const changeRoute = (options) => {\n        if(options && options[0]) {\n            if(props.type == 'director') {\n                router.push(`/director/${options[0].value}`);\n            } else {\n                router.push(`/company/${options[0].value}`);\n            }\n        }\n    };\n\n    return (\n        <AsyncTypeahead\n            id=\"async-example\"\n            isLoading={isLoading}\n            labelKey={option => `${option.name} | ${option.value}`}\n            minLength={3}\n            onSearch={handleSearch}\n            options={options}\n            placeholder={props.placeholder}\n            renderMenuItemChildren={(option, props) => (\n                <div>\n                    {`${option.name}`}\n                </div>\n            )}\n            onChange={changeRoute}\n            size='sm'\n        />\n    );\n};\n\nexport { CustomAsyncTypeahead as AsyncTypeahead };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAQA;AADA;AACA;AARA;AAIA;AAQA;AAZA;AAAA;AACA;AADA;AAAA;AAAA;AAcA;AACA;AAfA;AAiBA;AACA;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAKA;AACA;AAdA;AAiBA;AACA;;;;;A","sourceRoot":""}